{"version":3,"file":"static/js/9040.0ea90083.chunk.js","mappings":"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","sources":["components/ResetPasswordPopup.jsx","widgets/LoginForm.jsx","pages/Login.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@apollo/src/react/hooks/useMutation.ts"],"sourcesContent":["// components\nimport Popup from \"@components/Popup\";\nimport { toast } from \"react-toastify\";\n\n// hooks\nimport { useForm } from \"react-hook-form\";\n\n// utils\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst ResetPasswordPopup = ({ open, onClose }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const handleClose = () => {\n    reset();\n    onClose();\n  };\n\n  const onSubmit = (data) => {\n    toast.info(`New password was sent to ${data.email}`);\n    handleClose();\n  };\n\n  return (\n    <Popup open={open} onClose={handleClose}>\n      <div className=\"d-flex flex-column g-20\">\n        <div className=\"d-flex flex-column g-10\">\n          <h2>Reset Password</h2>\n          <p>\n            Enter your email address below and we'll send you a link to reset\n            your password.\n          </p>\n        </div>\n        <div className=\"d-flex flex-column g-16\">\n          <form className=\"d-flex g-10\" onSubmit={handleSubmit(onSubmit)}>\n            <input\n              className={classNames(\"field\", { \"field--error\": errors.email })}\n              type=\"text\"\n              placeholder=\"example@domain.com\"\n              {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\n            />\n            <button className=\"btn\">Send</button>\n          </form>\n          <p className=\"text-12\">\n            If you don't receive an email within a few minutes, please check\n            your spam folder.\n          </p>\n        </div>\n      </div>\n    </Popup>\n  );\n};\n\nResetPasswordPopup.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ResetPasswordPopup;\n","// components\nimport PasswordInput from \"@components/PasswordInput\";\n//import BasicCheckbox from \"@ui/BasicCheckbox\";\nimport ResetPasswordPopup from \"@components/ResetPasswordPopup\";\nimport { NavLink } from \"react-router-dom\";\nimport { CircularProgress } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\n\n// hooks\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\n// utils\nimport classNames from \"classnames\";\n\nimport { addLoggedUser } from \"./../features/user/userSlice\";\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst LOGIN = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(userInput: { email: $email, password: $password }) {\n      user {\n        name\n        email\n        tel\n        role {\n          name\n        }\n      }\n\n      accessToken\n      refreshToken\n      error {\n        code\n        message\n      }\n    }\n  }\n`;\n\nconst LoginForm = () => {\n  const [open, setOpen] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      //rememberMe: false,\n    },\n  });\n  const [login, { data, loading }] = useMutation(LOGIN);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const loginStatus = useSelector((state) => state.auth.status);\n  const error = useSelector((state) => state.auth.error);\n  const ticketsDesired = useSelector((state) => state.events.ticketsDesired);\n\n  const onSubmit = async (credentials, e) => {\n    //console.log(credentials);\n    e.preventDefault();\n    try {\n      await dispatch(\n        addLoggedUser({\n          loginFunc: login,\n          email: credentials.email,\n          password: credentials.password,\n        })\n      ).unwrap();\n    } catch (error) {\n      console.log(\" Error\", error);\n    }\n  };\n  useEffect(() => {\n    //console.log(loginStatus);\n    if (loginStatus === \"failed\") {\n      toast.error(error);\n    }\n    if (loginStatus === \"succeeded\") {\n      Object.keys(ticketsDesired).length > 1\n        ? navigate(\"/payment\")\n        : navigate(\"/\");\n    }\n  }, [dispatch, loginStatus]);\n  const handleResetPassword = (e) => {\n    e.preventDefault();\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <h1>Connexion</h1>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div\n          className=\"d-flex flex-column g-10\"\n          style={{ margin: \"20px 0 30px\" }}\n        >\n          <div className=\"d-flex flex-column g-20\">\n            <input\n              className={classNames(\"field\", { \"field--error\": errors.email })}\n              type=\"text\"\n              placeholder=\"E-mail\"\n              {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\n            />\n            <Controller\n              control={control}\n              name=\"password\"\n              rules={{ required: true, minLength: 8 }}\n              render={({\n                field: { ref, onChange, value },\n                fieldState: { error },\n              }) => (\n                <PasswordInput\n                  className={classNames(\"field\", { \"field--error\": error })}\n                  value={value}\n                  onChange={(e) => onChange(e.target.value)}\n                  placeholder=\"Mot de passe (minimum 8 charactères)\"\n                  innerRef={ref}\n                />\n              )}\n            />\n          </div>\n          <div className=\"d-flex align-items-center g-10\">\n            {/* <Controller control={control}\n                                    name=\"rememberMe\"\n                                    render={({field: {ref, onChange, value}}) => (\n                                        <BasicCheckbox id=\"rememberMe\"\n                                                       checked={value}\n                                                       onChange={e => onChange(e.target.checked)}\n                                                       innerRef={ref}/>\n                                    )}\n                        /> */}\n            <NavLink aria-label=\"Inscription\" to=\"/sign-up\">\n              <label htmlFor=\"rememberMe\">Inscrivez-vous</label>\n            </NavLink>\n          </div>\n        </div>\n        {loginStatus === \"loading\" ? (\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <CircularProgress color=\"success\" style={{ margin: \"auto\" }} />\n          </div>\n        ) : (\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <button className=\"btn btn--sm\" type=\"submit\">\n              Connexion\n            </button>\n            <button\n              className=\"text-button text-button--sm\"\n              onClick={handleResetPassword}\n            >\n              Oublié mot de passe\n            </button>\n          </div>\n        )}\n\n        {/* <button\n            className=\"btn btn--sm\"\n            type=\"submit\"\n            onClick={handleSubmit(onSubmit)}\n          >\n            Connexion\n          </button>\n          <button\n            className=\"text-button text-button--sm\"\n            onClick={handleResetPassword}\n          >\n            Oublié mot de passe\n          </button> */}\n      </form>\n      <ResetPasswordPopup open={open} onClose={() => setOpen(false)} />\n    </>\n  );\n};\n\nexport default LoginForm;\n","// components\nimport AuthLayout from '@components/AuthLayout';\nimport LoginForm from '@widgets/LoginForm';\n\nconst Login = () => {\n    return (\n        <AuthLayout title=\"Login\">\n            <LoginForm/>\n        </AuthLayout>\n    );\n}\n\nexport default Login","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import * as React from \"rehackt\";\nimport type { DocumentNode } from \"graphql\";\nimport type { TypedDocumentNode } from \"@graphql-typed-document-node/core\";\nimport type {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n  NoInfer,\n} from \"../types/types.js\";\n\nimport type {\n  ApolloCache,\n  DefaultContext,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core/index.js\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\n\n/**\n *\n *\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\n *\n * @example\n * ```jsx\n * import { gql, useMutation } from '@apollo/client';\n *\n * const ADD_TODO = gql`\n *   mutation AddTodo($type: String!) {\n *     addTodo(type: $type) {\n *       id\n *       type\n *     }\n *   }\n * `;\n *\n * function AddTodo() {\n *   let input;\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\n *\n *   return (\n *     <div>\n *       <form\n *         onSubmit={e => {\n *           e.preventDefault();\n *           addTodo({ variables: { type: input.value } });\n *           input.value = '';\n *         }}\n *       >\n *         <input\n *           ref={node => {\n *             input = node;\n *           }}\n *         />\n *         <button type=\"submit\">Add Todo</button>\n *       </form>\n *     </div>\n *   );\n * }\n * ```\n * @since 3.0.0\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\n * @param options - Options to control how the mutation is executed.\n * @returns A tuple in the form of `[mutate, result]`\n */\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<\n    NoInfer<TData>,\n    NoInfer<TVariables>,\n    TContext,\n    TCache\n  >\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = React.useState<Omit<MutationResult, \"reset\">>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = React.useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = React.useCallback(\n    (\n      executeOptions: MutationFunctionOptions<\n        TData,\n        TVariables,\n        TContext,\n        TCache\n      > = {}\n    ) => {\n      const { options, mutation } = ref.current;\n      const baseOptions = { ...options, mutation };\n      const client = executeOptions.client || ref.current.client;\n\n      if (\n        !ref.current.result.loading &&\n        !baseOptions.ignoreResults &&\n        ref.current.isMounted\n      ) {\n        setResult(\n          (ref.current.result = {\n            loading: true,\n            error: void 0,\n            data: void 0,\n            called: true,\n            client,\n          })\n        );\n      }\n\n      const mutationId = ++ref.current.mutationId;\n      const clientOptions = mergeOptions(baseOptions, executeOptions);\n\n      return client\n        .mutate(clientOptions as MutationOptions<TData, OperationVariables>)\n        .then((response) => {\n          const { data, errors } = response;\n          const error =\n            errors && errors.length > 0 ?\n              new ApolloError({ graphQLErrors: errors })\n            : void 0;\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (error && onError) {\n            onError(\n              error,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n          }\n\n          if (\n            mutationId === ref.current.mutationId &&\n            !clientOptions.ignoreResults\n          ) {\n            const result = {\n              called: true,\n              loading: false,\n              data,\n              error,\n              client,\n            };\n\n            if (ref.current.isMounted && !equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onCompleted =\n            executeOptions.onCompleted || ref.current.options?.onCompleted;\n\n          if (!error) {\n            onCompleted?.(\n              response.data!,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n          }\n\n          return response;\n        })\n        .catch((error) => {\n          if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n            const result = {\n              loading: false,\n              error,\n              data: void 0,\n              called: true,\n              client,\n            };\n\n            if (!equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (onError) {\n            onError(\n              error,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n\n            // TODO(brian): why are we returning this here???\n            return { data: void 0, errors: error };\n          }\n\n          throw error;\n        });\n    },\n    []\n  );\n\n  const reset = React.useCallback(() => {\n    if (ref.current.isMounted) {\n      const result = { called: false, loading: false, client };\n      Object.assign(ref.current, { mutationId: 0, result });\n      setResult(result);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n"],"names":["_ref","open","onClose","register","handleSubmit","formState","errors","reset","useForm","handleClose","_jsx","Popup","children","_jsxs","className","onSubmit","data","toast","info","concat","email","classNames","type","placeholder","required","pattern","LOGIN","gql","_templateObject","_taggedTemplateLiteral","LoginForm","setOpen","useState","control","defaultValues","password","login","loading","useMutation","navigate","useNavigate","dispatch","useDispatch","loginStatus","useSelector","state","auth","status","error","ticketsDesired","events","useEffect","Object","keys","length","_Fragment","async","credentials","e","preventDefault","addLoggedUser","loginFunc","unwrap","console","log","style","margin","Controller","name","rules","minLength","render","field","ref","onChange","value","fieldState","PasswordInput","target","innerRef","NavLink","to","htmlFor","CircularProgress","color","onClick","ResetPasswordPopup","Login","AuthLayout","title","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject2","_templateObject3","_templateObject4","_excluded","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","props","styles","ownerState","root","variant","capitalize","theme","_extends","display","transition","transitions","create","vars","palette","main","_ref2","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","React","inProps","useThemeProps","size","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","width","height","role","viewBox","cx","cy","r","fill","strokeWidth","mutation","options","client","useApolloClient","verifyDocumentType","DocumentType","Mutation","_a","called","result","setResult","mutationId","isMounted","assign","current","execute","executeOptions","baseOptions","__assign","ignoreResults","clientOptions","mergeOptions","mutate","then","response","ApolloError","graphQLErrors","onError","result_1","equal","onCompleted","_b","catch","result_2","result_3"],"sourceRoot":""}