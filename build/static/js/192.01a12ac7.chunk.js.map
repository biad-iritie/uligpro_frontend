{"version":3,"file":"static/js/192.01a12ac7.chunk.js","mappings":"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","sources":["webpack://uligpro/./src/widgets/MyRecapTicket/styles.module.scss?ed5a","widgets/MyRecapTicket/index.jsx","widgets/MyFormPayment/index.jsx","pages/MyBuyingTickets.jsx","ui/CustomSelect/styles.js","ui/TabButton.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@apollo/src/react/hooks/useMutation.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"styles_card__vmIgG\",\"container\":\"styles_container__w5464\",\"wrapper\":\"styles_wrapper__USPiG\",\"title\":\"styles_title__rUpHw\",\"img\":\"styles_img__6R0-i\",\"button\":\"styles_button__kFxMi\"};","// styling\nimport styles from \"./styles.module.scss\";\n\n// components\nimport Spring from \"@components/Spring\";\nimport { toast } from \"react-toastify\";\nimport TruncatedText from \"@components/TruncatedText\";\nimport { CircularProgress } from \"@mui/material\";\n// hooks\nimport useMeasure from \"react-use-measure\";\n\n// assets\n\nimport {\n  getTicketsDesired,\n  resetPaymentUrl,\n} from \"./../../features/event/eventSlide\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { buyTickets } from \"./../../features/event/eventSlide\";\nimport { actionAfterPayment } from \"./../../features/event/eventSlide\";\n\nconst BUY_TICKET = gql`\n  mutation BuyTickets($tickets: [buyTicketsEventInput!]!) {\n    buyTickets(tickets: $tickets) {\n      code\n      payment_url\n      payment_token\n      payment_id\n      error {\n        code\n        message\n      }\n    }\n  }\n`;\nconst CHECK_PAYMENT = gql`\n  mutation ActionAfterPayment($idTransaction: String!) {\n    actionAfterPayment(idTransaction: $idTransaction) {\n      message\n    }\n  }\n`;\nconst MyRecapTicket = () => {\n  //const [headerRef, { height: headerHeight }] = useMeasure();\n  const [footerRef, { height: footerHeight }] = useMeasure();\n  const [nameRef, { width }] = useMeasure();\n  const navigate = useNavigate();\n  const ticketsDesired = useSelector((state) => state.events.ticketsDesired);\n  const eventSelected = useSelector((state) => state.events.eventSelected);\n  const [tickets, setTickets] = useState([]);\n  const [main_total, setTotal] = useState(0);\n  const reqError = useSelector((state) => state.events.error);\n  const status = useSelector((state) => state.events.status.buyTicket);\n  const paymentUrl = useSelector((state) => state.events.paymentUrl);\n  const payment_id = useSelector((state) => state.events.payment_id);\n  const [req_buyTickets, { data, loading }] = useMutation(BUY_TICKET);\n  const dispatch = useDispatch();\n  const message = useSelector((state) => state.events.message);\n  const [checkPayment] = useMutation(CHECK_PAYMENT);\n\n  const proceedPaiement = async () => {\n    let fixedTickets = [];\n    Object.entries(ticketsDesired).forEach(([key, value]) => {\n      fixedTickets.push({\n        eventId: eventSelected.id,\n        ticket_categoryId: key,\n        quantity: value.quantity,\n      });\n    });\n\n    try {\n      await dispatch(\n        buyTickets({\n          buyTicketsFunc: req_buyTickets,\n          tickets: fixedTickets,\n          //transaction: { debitNumber: data.tel, way: \"WAVE\" },\n        })\n      ).unwrap();\n\n      //toast.success(message);\n      //toast.success(\"Allez dans votre profil pour telecharger vos tickets\");\n\n      //navigate(\"/\", { replace: true });\n    } catch (error) {\n      console.log(\" Error\", error);\n      toast.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    //console.log(\"Effect\");\n    if (tickets.length === 0 && Object.keys(ticketsDesired).length > 0) {\n      let mappingTicket = [];\n      let sum_totals = 0;\n      Object.entries(ticketsDesired).forEach(([key, value]) => {\n        mappingTicket.push(value);\n        sum_totals += value.quantity * value.price;\n      });\n      setTotal(sum_totals);\n      setTickets(mappingTicket);\n    }\n    if (paymentUrl !== \"\" && status === \"succeeded\") {\n      window.open(paymentUrl, \"_blank\", \"rel=noopener noreferrer\");\n      setTimeout(async () => {\n        try {\n          await dispatch(\n            actionAfterPayment({\n              actionAfterPaymentFunc: checkPayment,\n              idTransaction: payment_id,\n            })\n          ).unwrap();\n        } catch (error) {\n          toast.error(error.message);\n        }\n      }, 120000); // 2 minutes in milliseconds\n\n      dispatch(resetPaymentUrl());\n    }\n    if (Object.keys(ticketsDesired).length === 0) {\n      navigate(\"/\");\n    }\n  }, [ticketsDesired, status, paymentUrl]);\n  return (\n    <Spring className={`${styles.card} card card-padded`}>\n      <h3 className={styles.title}>Recapitulatif</h3>\n\n      <div className=\"track d-flex flex-column flex-1\">\n        {tickets.length > 0 ? (\n          tickets.map((ticket, index) => {\n            const name = ticket.name;\n            const price = `${ticket.price} FCFA`;\n            const quantity = ticket.quantity;\n            const total_price = `${ticket.price * ticket.quantity} FCFA`;\n\n            return (\n              <div\n                style={{ paddingBottom: \"10px\" }}\n                className={`${styles.item} d-flex align-items-center justify-content-between g-20`}\n                key={index}\n              >\n                <div className=\"d-flex align-items-center flex-1 g-10\">\n                  <div className=\"d-flex flex-column flex-1\" ref={nameRef}>\n                    <TruncatedText\n                      className=\"h4\"\n                      text={name}\n                      width={width}\n                      lines={1}\n                    />\n\n                    <span className={`label label--store h5`}>\n                      {`${price} x ${quantity}`}\n                    </span>\n                  </div>\n                </div>\n\n                <h3 className=\"text-highlight\">{total_price}</h3>\n              </div>\n            );\n          })\n        ) : (\n          /* Object.entries(tickets).forEach(([key, value]) => {\n            const name = value.name;\n            const price = `${value.price} FCFA`;\n            const total_price = `${value.price * value.quantity} FCFA`;\n            return (\n              <div\n                style={{ paddingBottom: \"10px\" }}\n                className={`${styles.item} d-flex align-items-center justify-content-between g-20`}\n                key={key}\n              >\n                <div className=\"d-flex align-items-center flex-1 g-10\">\n                  <div className=\"d-flex flex-column flex-1\" ref={nameRef}>\n                    <TruncatedText\n                      className=\"h4\"\n                      text={name}\n                      width={width}\n                      lines={1}\n                    />\n\n                    <span className={`label label--store h5`}>{price}</span>\n                  </div>\n                </div>\n\n                <h3 className=\"text-highlight\">{total_price}</h3>\n              </div>\n            );\n          }) */\n          <></>\n        )}\n\n        {/* {data.map((item) => {\n          const price = `${item.price} FCFA`;\n          const total_price = `${item.price * item.quantity} FCFA`;\n          return (\n            <div\n              style={{ paddingBottom: \"10px\" }}\n              className={`${styles.item} d-flex align-items-center justify-content-between g-20`}\n              key={item.id}\n            >\n              <div className=\"d-flex align-items-center flex-1 g-10\">\n                <div className=\"d-flex flex-column flex-1\" ref={nameRef}>\n                  <TruncatedText\n                    className=\"h4\"\n                    text={item.title}\n                    width={width}\n                    lines={1}\n                  />\n\n                  <span className={`label label--store h5`}>{price}</span>\n                </div>\n              </div>\n\n              <h3 className=\"text-highlight\">{total_price}</h3>\n            </div>\n          );\n        })} */}\n      </div>\n\n      <div className=\"card-padded d-flex flex-column g-20\" ref={footerRef}>\n        <p className=\"d-flex justify-content-between h3\">\n          Total: <span>{`${main_total} FCFA`}</span>\n        </p>\n      </div>\n      <div className={styles.footer}>\n        {status === \"loading\" ? (\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <CircularProgress color=\"success\" style={{ margin: \"auto\" }} />\n          </div>\n        ) : (\n          <>\n            <button\n              disabled={tickets.length === 0 ? true : false}\n              className=\"btn w-100\"\n              onClick={() => {\n                proceedPaiement();\n              }}\n            >\n              Proceder au paiement\n            </button>\n          </>\n        )}\n      </div>\n    </Spring>\n  );\n};\n\nexport default MyRecapTicket;\n","// styling\nimport styles from \"./styles.module.scss\";\n\n// components\nimport Spring from \"@components/Spring\";\nimport { TabsList } from \"@mui/base/TabsList\";\nimport { TabPanel } from \"@mui/base/TabPanel\";\nimport { Tabs } from \"@mui/base/Tabs\";\nimport TabButton from \"@ui/TabButton\";\nimport MyFormMobileMoney from \"@widgets/MyFormPayment/MyFormMobileMoney\";\nimport MyFormWave from \"@widgets/MyFormPayment/MyFormWave\";\nimport MyFormVisa from \"@widgets/MyFormPayment/MyFormVisa\";\n/* import ConfirmationPopup from \"@components/ConfirmationPopup\"; */\n\nimport Fade from \"@mui/material/Fade\";\n\n// hooks\nimport { useEffect, useState } from \"react\";\nimport { useWindowSize } from \"react-use\";\nimport { gql } from \"@apollo/client\";\nimport { useSelector } from \"react-redux\";\n\nconst BUY_TICKET = gql`\n  mutation BuyTickets(\n    $tickets: [buyTicketsEventInput!]!\n    $transaction: TransactionInput!\n  ) {\n    buyTickets(tickets: $tickets, transaction: $transaction) {\n      message\n    }\n  }\n`;\n\nconst MyFormPayment = () => {\n  const [activeTab, setActiveTab] = useState(\"mobile_money\");\n  const { width } = useWindowSize();\n  //  const [open, setOpen] = useState(true);\n\n  //const handleConfirmation = () => {};\n\n  return (\n    <Spring className=\"card d-flex flex-column card-padded\">\n      <h3>Methode de Paiement</h3>\n      <div\n        className=\"d-flex flex-column justify-content-between flex-1\"\n        id=\"cinetpay\"\n      >\n        {/*<Tabs value={activeTab}>\n          <TabsList className={`${styles.tabs_list} tab-nav col-2`}>\n            <TabButton\n              title={width >= 375 ? \"Mobile money\" : \"Mobile\"}\n              onClick={() => setActiveTab(\"mobile_money\")}\n              active={activeTab === \"mobile_money\"}\n            />\n             <TabButton\n              title={width >= 375 ? \"Wave\" : \"Wave\"}\n              onClick={() => setActiveTab(\"wave\")}\n              active={activeTab === \"wave\"}\n            />\n            <TabButton\n              title={width >= 375 ? \"Visa\" : \"Visa\"}\n              onClick={() => setActiveTab(\"visa\")}\n              active={activeTab === \"visa\"}\n            /> \n          </TabsList>\n          <TabPanel value=\"mobile_money\">\n            <Fade in={activeTab === \"mobile_money\"} timeout={400}>\n              <div>\n                <MyFormMobileMoney reqBuyTicket={BUY_TICKET} />\n              </div>\n            </Fade>\n          </TabPanel>\n          <TabPanel value=\"wave\">\n            <Fade in={activeTab === \"wave\"} timeout={400}>\n              <div>\n                <MyFormWave reqBuyTicket={BUY_TICKET} />\n              </div>\n            </Fade>\n          </TabPanel>\n          <TabPanel value=\"visa\">\n            <Fade in={activeTab === \"visa\"} timeout={400}>\n              <div>\n                <MyFormVisa />\n              </div>\n            </Fade>\n          </TabPanel> \n        </Tabs>*/}\n      </div>\n      {/* <ConfirmationPopup\n        open={open}\n        onClose={() => setOpen(false)}\n        onActivate={handleConfirmation}\n      /> */}\n    </Spring>\n  );\n};\n\nexport default MyFormPayment;\n","import { useEffect } from \"react\";\n\nimport AppGrid from \"@layout/AppGrid\";\n\nimport PageHeader from \"@layout/PageHeader\";\n\nimport MyRecapTicket from \"@widgets/MyRecapTicket\";\nimport MyFormPayment from \"@widgets/MyFormPayment\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst widgets = {\n  recap: <MyRecapTicket />,\n  //payment: <MyFormPayment />,\n};\nconst MyBuyingTickets = () => {\n  const ticketsDesired = useSelector((state) => state.events.ticketsDesired);\n  const navigate = useNavigate();\n  /* useEffect(() => {\n    if (Object.keys(ticketsDesired).length === 0) {\n      navigate(\"/\");\n    }\n    console.log(Object.keys(ticketsDesired).length);\n  }, [ticketsDesired]); */\n  return (\n    <>\n      <PageHeader title=\"Paiement\" />\n      <AppGrid id=\"buying_ticket\" widgets={widgets} />\n    </>\n  );\n};\n\nexport default MyBuyingTickets;\n","import styled from 'styled-components/macro';\nimport {keyframes} from 'styled-components';\nimport theme from 'styled-theming';\nimport Select from 'react-select';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst NormalizedSelect = styled(Select)`\n  .select {\n    &__control {\n      cursor: pointer;\n      transition: var(--transition);\n      border: none;\n      min-height: unset;\n      border-radius: 4px;\n      box-shadow: none;\n\n      &--is-focused, &:hover {\n        outline: none;\n      }\n\n      &--is-focused .icon {\n        transform: rotate(180deg);\n      }\n\n      .icon {\n        transition: .3s ease-in-out;\n      }\n    }\n\n    &__single-value {\n      overflow: visible;\n    }\n\n    &__menu {\n      min-width: max-content;\n      width: 100%;\n      border-radius: 12px;\n      z-index: 100;\n      animation: ${fadeIn} var(--transition);\n\n      &.close {\n        animation: ${fadeIn} var(--transition) reverse;\n      }\n\n      &-list {\n        max-height: 160px;\n        overflow-y: auto;\n        scroll-behavior: smooth;\n        z-index: 100;\n      }\n    }\n\n    &__option {\n      cursor: pointer;\n      transition: var(--transition);\n\n      &:hover,\n      &--is-focused,\n      &--is-selected {\n        background: transparent;\n        color: var(--header);\n      }\n    }\n\n    &__indicator, &__indicator-separator {\n      display: none;\n    }\n\n    &__value-container {\n      padding: 0;\n    }\n  }\n`;\n\nconst BasicSelect = styled(NormalizedSelect)`\n  .select {\n    &__control {\n      background-color: transparent;\n      border: 1px solid var(--border);\n      padding: 0 12px;\n      height: 40px;\n\n      &--is-focused, &:hover {\n        border-color: var(--highlight);\n      }\n    }\n\n    &__placeholder {\n      color: var(--placeholder);\n    }\n\n    &__single-value {\n      color: var(--text);\n      line-height: 1;\n    }\n\n    &__menu {\n      box-shadow: var(--widget-shadow);\n      background: var(--widget);\n      border: ${theme('theme', {\n        light: '1px solid var(--widget)',\n        dark: '1px solid var(--border)',\n      })};\n      width: 100%;\n    }\n  }\n`;\n\nexport default BasicSelect","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\n\n// hooks\nimport {useThemeProvider} from '@contexts/themeContext';\n\n// utils\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst StyledTabButton = styled.button`\n  border-radius: 0;\n  position: relative;\n  background: ${theme('theme', {\n    light: 'var(--body)',\n    dark: 'var(--border)'\n  })};\n\n  &.active, &[aria-selected='true'], &:hover, &:focus {\n    background: ${theme('theme', {\n      light: 'var(--widget) !important',\n      dark: 'var(--accent) !important'\n    })};\n    box-shadow: ${theme('theme', {\n      light: '0 1px 8px rgba(110, 110, 110, 0.1);',\n      dark: 'none'\n    })};\n  }\n\n  .title {\n    position: relative;\n    z-index: 2;\n  }\n\n  .color {\n    position: absolute;\n    z-index: 1;\n    height: 100%;\n    width: 4px;\n    top: 0;\n    transition: width var(--transition);\n  }\n\n  &:first-of-type .color {\n    &.ltr {\n      left: 0;\n    }\n\n    &.rtl {\n      right: 0;\n    }\n  }\n\n  &:last-of-type .color {\n    transform: scaleX(-1);\n\n    &.ltr {\n      right: 0;\n    }\n\n    &.rtl {\n      left: 0;\n    }\n  }\n\n  &[data-colored='true'] {\n    &.active, &[aria-selected='true'], &:hover, &:focus {\n      background: var(--widget) !important;\n      box-shadow: none;\n\n      .color {\n        width: 100%;\n      }\n\n      &.dark-bg {\n        color: #fff;\n      }\n    }\n  }\n`;\n\nconst TabButton = ({title, active, onClick, type = 'basic', color, value}) => {\n    const {direction} = useThemeProvider();\n    const darkColors = ['blue', 'purple'];\n\n    return (\n        <StyledTabButton\n            className={classNames('btn text-overflow', {'active': active, 'dark-bg': darkColors.includes(color)})}\n            data-colored={type === 'color'}\n            value={value}\n            onClick={onClick}>\n            {\n                type === 'color' && (\n                    <span className={`color ${direction}`} style={{backgroundColor: `var(--${color})`}}/>\n                )\n            }\n            <span className=\"title\">\n                {title}\n            </span>\n        </StyledTabButton>\n    )\n}\n\nTabButton.propTypes = {\n    title: PropTypes.string.isRequired,\n    active: PropTypes.bool,\n    onClick: PropTypes.func,\n    type: PropTypes.oneOf(['basic', 'color']),\n    color: PropTypes.string\n}\n\nexport default TabButton","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import * as React from \"rehackt\";\nimport type { DocumentNode } from \"graphql\";\nimport type { TypedDocumentNode } from \"@graphql-typed-document-node/core\";\nimport type {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n  NoInfer,\n} from \"../types/types.js\";\n\nimport type {\n  ApolloCache,\n  DefaultContext,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core/index.js\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\n\n/**\n *\n *\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\n *\n * @example\n * ```jsx\n * import { gql, useMutation } from '@apollo/client';\n *\n * const ADD_TODO = gql`\n *   mutation AddTodo($type: String!) {\n *     addTodo(type: $type) {\n *       id\n *       type\n *     }\n *   }\n * `;\n *\n * function AddTodo() {\n *   let input;\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\n *\n *   return (\n *     <div>\n *       <form\n *         onSubmit={e => {\n *           e.preventDefault();\n *           addTodo({ variables: { type: input.value } });\n *           input.value = '';\n *         }}\n *       >\n *         <input\n *           ref={node => {\n *             input = node;\n *           }}\n *         />\n *         <button type=\"submit\">Add Todo</button>\n *       </form>\n *     </div>\n *   );\n * }\n * ```\n * @since 3.0.0\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\n * @param options - Options to control how the mutation is executed.\n * @returns A tuple in the form of `[mutate, result]`\n */\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<\n    NoInfer<TData>,\n    NoInfer<TVariables>,\n    TContext,\n    TCache\n  >\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = React.useState<Omit<MutationResult, \"reset\">>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = React.useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = React.useCallback(\n    (\n      executeOptions: MutationFunctionOptions<\n        TData,\n        TVariables,\n        TContext,\n        TCache\n      > = {}\n    ) => {\n      const { options, mutation } = ref.current;\n      const baseOptions = { ...options, mutation };\n      const client = executeOptions.client || ref.current.client;\n\n      if (\n        !ref.current.result.loading &&\n        !baseOptions.ignoreResults &&\n        ref.current.isMounted\n      ) {\n        setResult(\n          (ref.current.result = {\n            loading: true,\n            error: void 0,\n            data: void 0,\n            called: true,\n            client,\n          })\n        );\n      }\n\n      const mutationId = ++ref.current.mutationId;\n      const clientOptions = mergeOptions(baseOptions, executeOptions);\n\n      return client\n        .mutate(clientOptions as MutationOptions<TData, OperationVariables>)\n        .then((response) => {\n          const { data, errors } = response;\n          const error =\n            errors && errors.length > 0 ?\n              new ApolloError({ graphQLErrors: errors })\n            : void 0;\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (error && onError) {\n            onError(\n              error,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n          }\n\n          if (\n            mutationId === ref.current.mutationId &&\n            !clientOptions.ignoreResults\n          ) {\n            const result = {\n              called: true,\n              loading: false,\n              data,\n              error,\n              client,\n            };\n\n            if (ref.current.isMounted && !equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onCompleted =\n            executeOptions.onCompleted || ref.current.options?.onCompleted;\n\n          if (!error) {\n            onCompleted?.(\n              response.data!,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n          }\n\n          return response;\n        })\n        .catch((error) => {\n          if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n            const result = {\n              loading: false,\n              error,\n              data: void 0,\n              called: true,\n              client,\n            };\n\n            if (!equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (onError) {\n            onError(\n              error,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n\n            // TODO(brian): why are we returning this here???\n            return { data: void 0, errors: error };\n          }\n\n          throw error;\n        });\n    },\n    []\n  );\n\n  const reset = React.useCallback(() => {\n    if (ref.current.isMounted) {\n      const result = { called: false, loading: false, client };\n      Object.assign(ref.current, { mutationId: 0, result });\n      setResult(result);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n"],"names":["BUY_TICKET","gql","_templateObject","_taggedTemplateLiteral","CHECK_PAYMENT","_templateObject2","MyRecapTicket","footerRef","height","footerHeight","useMeasure","nameRef","width","navigate","useNavigate","ticketsDesired","useSelector","state","events","eventSelected","tickets","setTickets","useState","main_total","setTotal","status","error","buyTicket","paymentUrl","payment_id","req_buyTickets","data","loading","useMutation","dispatch","useDispatch","checkPayment","message","useEffect","length","Object","keys","mappingTicket","sum_totals","entries","forEach","_ref2","key","value","push","quantity","price","window","open","setTimeout","async","actionAfterPayment","actionAfterPaymentFunc","idTransaction","unwrap","toast","resetPaymentUrl","_jsxs","Spring","className","concat","styles","card","children","_jsx","title","map","ticket","index","name","total_price","style","paddingBottom","item","ref","TruncatedText","text","lines","_Fragment","footer","CircularProgress","color","margin","disabled","onClick","fixedTickets","_ref","eventId","id","ticket_categoryId","buyTickets","buyTicketsFunc","console","log","proceedPaiement","widgets","recap","MyBuyingTickets","PageHeader","AppGrid","fadeIn","keyframes","NormalizedSelect","styled","Select","withConfig","componentId","theme","light","dark","button","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject3","_templateObject4","_excluded","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","circularDashKeyframe","CircularProgressRoot","overridesResolver","props","ownerState","root","variant","capitalize","_extends","display","transition","transitions","create","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","React","inProps","useThemeProps","size","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","role","viewBox","cx","cy","r","fill","strokeWidth","mutation","options","client","useApolloClient","verifyDocumentType","DocumentType","Mutation","_a","called","result","setResult","mutationId","isMounted","assign","current","execute","executeOptions","baseOptions","__assign","ignoreResults","clientOptions","mergeOptions","mutate","then","response","errors","ApolloError","graphQLErrors","onError","result_1","equal","onCompleted","_b","catch","result_2","reset","result_3"],"sourceRoot":""}