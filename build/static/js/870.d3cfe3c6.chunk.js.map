{"version":3,"file":"static/js/870.d3cfe3c6.chunk.js","mappings":"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","sources":["widgets/MyScanTicket/qr-frame.svg","widgets/MyScanTicket/index.jsx","pages/ScanTicket.jsx","ui/SelectionButton.jsx","ui/SelectionListTickets.jsx"],"sourcesContent":["var _path, _path2, _path3, _path4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgQrFrame(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 128,\n    height: 128,\n    viewBox: \"0 0 128 128\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 127C32 127.55 31.55 128 31 128L1 128C0.45 128 5.3662e-09 127.55 1.19249e-08 127L3.69671e-07 97C3.7623e-07 96.45 0.45 96 1 96C1.55 96 2 96.45 2 97L2 126L31 126C31.55 126 32 126.45 32 127Z\",\n    fill: \"#FEFEFE\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M127 96C127.55 96 128 96.45 128 97L128 127C128 127.55 127.55 128 127 128L97 128C96.45 128 96 127.55 96 127C96 126.45 96.45 126 97 126L126 126L126 97C126 96.45 126.45 96 127 96Z\",\n    fill: \"#FEFEFE\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 32C0.45 32 0 31.55 0 31V1C0 0.45 0.45 0 1 0H31C31.55 0 32 0.45 32 1C32 1.55 31.55 2 31 2H2V31C2 31.55 1.55 32 1 32Z\",\n    fill: \"#FEFEFE\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M96 0.999999C96 0.449999 96.45 -1.37909e-06 97 -1.35505e-06L127 -4.37114e-08C127.55 -1.96701e-08 128 0.45 128 1L128 31C128 31.55 127.55 32 127 32C126.45 32 126 31.55 126 31L126 2L97 2C96.45 2 96 1.55 96 0.999999Z\",\n    fill: \"#FEFEFE\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgQrFrame);\nexport default __webpack_public_path__ + \"static/media/qr-frame.e2e2f64139f92332d7c1e2b5c8b4ae84.svg\";\nexport { ForwardRef as ReactComponent };","import QrScanner from \"qr-scanner\";\n// styling\nimport styles from \"./styles.module.scss\";\n\n// components\nimport LazyImage from \"@components/LazyImage\";\nimport Spring from \"@components/Spring\";\nimport Submenu from \"@ui/Submenu\";\nimport SelectionListTickets from \"@ui/SelectionListTickets\";\nimport { CircularProgress } from \"@mui/material\";\n// hooks\nimport { useThemeProvider } from \"@contexts/themeContext\";\nimport useSubmenu from \"@hooks/useSubmenu\";\nimport {\n  Page,\n  Document,\n  StyleSheet,\n  View,\n  Text,\n  Image,\n  PDFDownloadLink,\n} from \"@react-pdf/renderer\";\n\n// hooks\nimport React, { useEffect, useState, useRef } from \"react\";\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport QrFrame from \"./qr-frame.svg\";\nimport { toast } from \"react-toastify\";\nimport { scanTicket } from \"./../../features/event/eventSlide\";\n\nconst SCAN_TICKET = gql`\n  mutation GetTicketScanned($code: String!) {\n    getTicketScanned(code: $code) {\n      status\n      error {\n        code\n        message\n      }\n    }\n  }\n`;\nconst MyScanTicket = () => {\n  const { theme } = useThemeProvider();\n  const [reqScanTicket, { data, loading }] = useMutation(SCAN_TICKET);\n\n  const videoEl = useRef(HTMLVideoElement);\n  const qrBoxEl = useRef(HTMLDivElement);\n\n  let scanner = useRef(QrScanner);\n  const [qrOn, setQrOn] = useState(true);\n  // Result\n  const [scanned, setScanned] = useState(false);\n  //const [selected, setSelected] = useState(FINALS_OPTIONS[0].value);\n\n  //const queryTicket = useQuery(GET_TICKETS)\n  const status = useSelector((state) => state.events.status.ticket);\n  const error = useSelector((state) => state.events.error);\n  const message = useSelector((state) => state.events.message);\n\n  const [code, setCode] = useState(\"No result\");\n\n  const dispatch = useDispatch();\n\n  const startScanning = () => {\n    // ðŸš€ Start QR Scanner\n    scanner?.current\n      ?.start()\n      .then(() => setQrOn(true))\n      .catch((err) => {\n        console.log(err);\n        if (err) setQrOn(false);\n      });\n  };\n  // Success\n  const onScanSuccess = async (result) => {\n    // ðŸ–¨ Print the \"result\" to browser console.\n    console.log(result);\n    scanner?.current?.stop();\n    setScanned(true);\n    try {\n      await dispatch(\n        scanTicket({\n          scanTicketsFunc: reqScanTicket,\n          code: result.data,\n        })\n      ).unwarp();\n      //toast.success(\"Ticket scannÃ©\");\n    } catch (error) {\n      console.log(error);\n    }\n\n    // âœ… Handle success.\n    // ðŸ˜Ž You can do whatever you want with the scanned result.\n    //setScannedResult(result?.data);\n  };\n\n  // Fail\n  const onScanFail = (err) => {\n    // ðŸ–¨ Print the \"err\" to browser console.\n    console.log(err);\n  };\n\n  useEffect(() => {\n    //console.log(!scanner.current);\n    if (videoEl?.current) {\n      // ðŸ‘‰ Instantiate the QR Scanner\n      scanner.current = new QrScanner(videoEl?.current, onScanSuccess, {\n        onDecodeError: onScanFail,\n        // ðŸ“· This is the camera facing mode. In mobile devices, \"environment\" means back camera and \"user\" means front camera.\n        preferredCamera: \"environment\",\n        // ðŸ–¼ This will help us position our \"QrFrame.svg\" so that user can only scan when qr code is put in between our QrFrame.svg.\n        highlightScanRegion: true,\n        // ðŸ”¥ This will produce a yellow (default color) outline around the qr code that we scan, showing a proof that our qr-scanner is scanning that qr code.\n        highlightCodeOutline: true,\n        // ðŸ“¦ A custom div which will pair with \"highlightScanRegion\" option above ðŸ‘†. This gives us full control over our scan region.\n        overlay: qrBoxEl?.current || undefined,\n      });\n    }\n\n    //startScanning();\n    // ðŸ§¹ Clean up on unmount.\n    // ðŸš¨ This removes the QR Scanner from rendering and using camera when it is closed or removed from the UI.\n    return () => {\n      if (!videoEl?.current) {\n        scanner?.current?.stop();\n      }\n    };\n    //console.log(selected);\n  }, []);\n  useEffect(() => {\n    if (!qrOn)\n      alert(\n        \"Camera is blocked or not accessible. Please allow camera in your browser permissions and Reload.\"\n      );\n    if (status === \"failed\") {\n      toast.error(error);\n    }\n    if (status === \"succeeded\" && scanned) {\n      message !== \"\" ? toast.success(message) : toast.error(error);\n      setScanned(false);\n    }\n  }, [qrOn, status]);\n\n  return (\n    <Spring className=\"card\">\n      <div className=\"qr-reader\">\n        <div ref={qrBoxEl} className=\"qr-box\">\n          <img\n            src={QrFrame}\n            alt=\"Qr Frame\"\n            width={256}\n            height={256}\n            className=\"qr-frame\"\n          />\n        </div>\n        <video ref={videoEl}></video>\n      </div>\n      <div\n        style={{\n          marginLeft: \"41%\",\n          marginTop: \"25%\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          zIndex: 99999,\n        }}\n      >\n        {status === \"loading\" && (\n          <>\n            <CircularProgress color=\"success\" />\n          </>\n        )}\n      </div>\n\n      {/* Show Data Result if scan is success */}\n      {/* {scannedResult && (\n        <p\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 99999,\n            color: \"white\",\n          }}\n        >\n          Scanned Result: {scannedResult}\n        </p>\n      )} */}\n      <div>\n        <div className=\"d-flex flex-column g-12 card-padded\"></div>\n        <button\n          className=\"btn w-100\"\n          onClick={() => {\n            startScanning();\n          }}\n        >\n          Scanner\n        </button>\n      </div>\n    </Spring>\n  );\n};\n\nexport default MyScanTicket;\n","// components\nimport PageHeader from \"@layout/PageHeader\";\nimport AppGrid from \"@layout/AppGrid\";\nimport MyScanTicket from \"@widgets/MyScanTicket\";\nimport { useDispatch } from \"react-redux\";\nimport { setStatusToIdle } from \"./../features/event/eventSlide\";\n\nconst widgets = {\n  /* avatar: <ProfileAvatar />, */\n  //info: <ProfileInfo />,\n  ticket: <MyScanTicket />,\n  //settings: <AccountSettings />,\n  //password: <ChangePassword />,\n};\n\nconst ScanTicket = () => {\n  useDispatch(setStatusToIdle);\n  return (\n    <>\n      <PageHeader title=\"Scanner Tickets\" />\n      <AppGrid id=\"scanticket\" widgets={widgets} />\n    </>\n  );\n};\n\nexport default ScanTicket;\n","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\n\n// utils\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst StyledButton = styled.button`\n  height: 40px;\n  border-radius: 8px;\n  padding: 0 14px;\n  transition: all var(--transition);\n  line-height: 1;\n  border: 1px solid var(--border);\n\n  &.list {\n    color: ${theme('theme', {\n      light: 'var(--highlight)',\n      dark: 'var(--text)',\n    })};\n    background-color: ${theme('theme', {\n      light: 'var(--widget)',\n      dark: 'var(--border)',\n    })};\n    \n    &:hover, &:focus,\n    &.active {\n        ${theme('theme', {\n          light: `\n            filter: drop-shadow(0px 1px 8px rgba(110, 110, 110, 0.1));\n            border-color: var(--widget);\n        `,\n          dark: `\n            background-color: var(--widget);\n            border-color: var(--widget);\n            box-shadow: 0 1px 8px rgba(33, 33, 33, 0.1);\n            color: var(--accent);\n        `\n        })};\n    }\n  }\n\n  &.group {\n    color: ${theme('theme', {\n      light: 'var(--olive)',\n      dark: 'var(--accent)',\n    })};\n    background-color: var(--widget);\n\n    &:hover, &:focus,\n    &.active {\n      ${theme('theme', {\n        light: `\n            filter: drop-shadow(0px 1px 8px rgba(110, 110, 110, 0.1));\n            border-color: var(--widget);\n        `,\n        dark: `\n            background-color: var(--border);\n        `\n      })};\n    }\n  }\n`;\n\nconst SelectionButton = ({text, onClick, active, type = 'list'}) => {\n    return (\n        <StyledButton className={classNames(`${type} h4`, {'active': active})} onClick={onClick}>\n            {text}\n        </StyledButton>\n    )\n}\n\nSelectionButton.propTypes = {\n    text: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    active: PropTypes.bool.isRequired,\n    type: PropTypes.oneOf(['list', 'group'])\n}\n\nexport default SelectionButton","// styling\nimport styled from \"styled-components/macro\";\nimport { css } from \"styled-components\";\nimport theme from \"styled-theming\";\n\n// components\nimport SelectionButton from \"@ui/SelectionButton\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// hooks\nimport { useEffect, useState } from \"react\";\nimport { useThemeProvider } from \"@contexts/themeContext\";\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst prevButton = css`\n  padding-left: 10px;\n  background: ${theme(\"theme\", {\n    light:\n      \"linear-gradient(90deg, #FFFFFF 28.49%, rgba(255, 255, 255, 0.0001) 100%);\",\n    dark: \"linear-gradient(-90deg, rgba(17, 19, 18, 0.0001) 0%, #111312 77.09%);\",\n  })};\n  border-radius: 4px 0 0 0;\n`;\n\nconst nextButton = css`\n  padding-right: 10px;\n  background: ${theme(\"theme\", {\n    light:\n      \"linear-gradient(-90deg, #FFFFFF 28.49%, rgba(255, 255, 255, 0.0001) 100%);\",\n    dark: \"linear-gradient(90deg, rgba(17, 19, 18, 0.0001) 0%, #111312 77.09%);\",\n  })};\n  border-radius: 0 4px 0 0;\n`;\n\nconst StyledSelectionList = styled.div`\n  display: flex;\n  gap: 20px;\n  box-shadow: 0 1px 8px rgba(110, 110, 110, 0.1);\n  background: ${theme(\"theme\", {\n    light: \"var(--widget)\",\n    dark: \"#1B1F23\",\n  })};\n  position: relative;\n\n  .swiper {\n    padding: 20px 0;\n  }\n\n  .swiper-slide {\n    width: fit-content;\n  }\n\n  .nav {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 10;\n\n    button {\n      width: 50px;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      color: #8ea2ab;\n    }\n\n    &.ltr button {\n      &:first-child {\n        ${prevButton};\n        justify-content: flex-start;\n      }\n\n      &:last-child {\n        ${nextButton};\n        justify-content: flex-end;\n      }\n    }\n\n    &.rtl button {\n      &:first-child {\n        ${nextButton};\n        justify-content: flex-start;\n      }\n\n      &:last-child {\n        ${prevButton};\n        justify-content: flex-end;\n      }\n    }\n  }\n`;\n\nconst SelectionListTickets = ({ active, setActive, options, innerRef }) => {\n  const [swiper, setSwiper] = useState(null);\n  const { direction } = useThemeProvider();\n  //console.log(active);\n  const handlePrev = () => {\n    swiper.slidePrev();\n    setActive(options[swiper.realIndex] || options[swiper.realIndex]);\n  };\n\n  const handleNext = () => {\n    swiper.slideNext();\n    setActive(options[swiper.realIndex] || options[swiper.realIndex]);\n  };\n\n  useEffect(() => {\n    if (swiper) {\n      swiper.changeLanguageDirection(direction);\n      swiper.update();\n    }\n  }, [swiper, direction]);\n\n  return (\n    <StyledSelectionList ref={innerRef}>\n      <div className={`nav ${direction}`}>\n        <button aria-label=\"Previous\" onClick={handlePrev}>\n          <i className=\"icon icon-chevron-left\" />\n        </button>\n        <button aria-label=\"Next\" onClick={handleNext}>\n          <i className=\"icon icon-chevron-right\" />\n        </button>\n      </div>\n      <Swiper\n        className=\"selection-list w-100 h-100\"\n        onSwiper={setSwiper}\n        slidesPerView=\"auto\"\n        spaceBetween={12}\n        loop={true}\n        centeredSlides={true}\n      >\n        {options.map((option, index) => (\n          <SwiperSlide key={index}>\n            <SelectionButton\n              text={(index + 1).toString()}\n              active={active === option.code || active === option}\n              onClick={() => setActive(option || option)}\n            />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </StyledSelectionList>\n  );\n};\n\nSelectionListTickets.propTypes = {\n  active: PropTypes.object,\n  setActive: PropTypes.func,\n  options: PropTypes.array,\n  innerRef: PropTypes.any,\n};\n\nexport default SelectionListTickets;\n"],"names":["SCAN_TICKET","gql","_templateObject","_taggedTemplateLiteral","MyScanTicket","theme","useThemeProvider","reqScanTicket","data","loading","useMutation","videoEl","useRef","HTMLVideoElement","qrBoxEl","HTMLDivElement","scanner","QrScanner","qrOn","setQrOn","useState","scanned","setScanned","status","useSelector","state","events","ticket","error","message","code","setCode","dispatch","useDispatch","onScanSuccess","async","_scanner$current2","console","log","result","current","stop","scanTicket","scanTicketsFunc","unwarp","onScanFail","err","useEffect","onDecodeError","preferredCamera","highlightScanRegion","highlightCodeOutline","overlay","undefined","_scanner$current3","alert","toast","success","_jsxs","Spring","className","children","_jsx","ref","src","QrFrame","alt","width","height","style","marginLeft","marginTop","position","top","left","zIndex","_Fragment","CircularProgress","color","onClick","startScanning","_scanner$current","start","then","catch","widgets","ScanTicket","setStatusToIdle","PageHeader","title","AppGrid","id","StyledButton","styled","button","withConfig","componentId","light","dark","_ref","text","active","type","classNames","concat","_templateObject2","prevButton","css","nextButton","StyledSelectionList","div","setActive","options","innerRef","swiper","setSwiper","direction","changeLanguageDirection","update","handlePrev","slidePrev","realIndex","handleNext","slideNext","Swiper","onSwiper","slidesPerView","spaceBetween","loop","centeredSlides","map","option","index","SwiperSlide","SelectionButton","toString"],"sourceRoot":""}