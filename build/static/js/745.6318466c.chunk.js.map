{"version":3,"file":"static/js/745.6318466c.chunk.js","mappings":"uJACA,QAA4B,0BAA5B,EAA8D,sBAA9D,EAA+L,qBAA/L,EAAiO,2BAAjO,EAAwQ,0B,yJCwBxQ,MAAMA,GAAcC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+KAqFvB,EAzEuBC,KACrB,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,OACVC,GAAe,KAAEC,EAAI,QAAEC,KAAaC,EAAAA,EAAAA,GAAYZ,GAEjDa,GAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAAOH,OAAOI,SACpDC,GAAQJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAAOE,QAC5CC,GAAUL,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAAOG,UAEpD,IAAI,KAAEC,IAASC,EAAAA,EAAAA,KAqBf,OANAC,EAAAA,EAAAA,YAAU,KACK,KAATF,GAAwB,OAATA,GAdDG,WAClB,UACQhB,GACJiB,EAAAA,EAAAA,IAAW,CACTC,gBAAiBhB,EACjBW,KAAMA,KAERM,QACJ,CAAE,MAAOR,GAEPS,EAAAA,GAAMT,MAAMA,EAAMC,QACpB,GAKES,CAAYR,EACd,GACC,CAACA,KAEFS,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACLC,UAAS,GAAAC,OAAKC,EAAgB,0CAAyCC,SAAA,EAEvEL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CACc,YAAXrB,GAAwB,yCACb,YAAXA,GAAwB,aAEf,cAAXA,IACCgB,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAD,SAAA,EACEE,EAAAA,EAAAA,KAAA,OAAKL,UAAWE,EAAaC,UAC3BE,EAAAA,EAAAA,KAACN,EAAAA,EAAM,CAACC,UAAU,sEAAqEG,UACrFE,EAAAA,EAAAA,KAACC,IAAM,CACLC,cAAyB,OAAVpB,EAAiBqB,EAAcC,SAKpDX,EAAAA,EAAAA,MAAA,OAAKE,UAAWE,EAAYC,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,MAAIL,UAAWE,EAAkBC,SACpB,OAAVhB,GACCkB,EAAAA,EAAAA,KAAA,QAAAF,SAAOf,KAEPiB,EAAAA,EAAAA,KAAA,QAAAF,SAAM,kCAGC,OAAVhB,IAAkBkB,EAAAA,EAAAA,KAAA,KAAGL,UAAWE,EAAiBC,SAAEhB,KACpDkB,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CACNV,UAAU,MACVW,MAAO,CAAEC,UAAW,QACpBC,QAASA,KACPC,OAAOC,OAAO,EACdZ,SACH,mBAMA,EC7Fb,EATiBa,KAEblB,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAD,SAAA,EACEE,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,MAAM,sBAClBb,EAAAA,EAAAA,KAAChC,EAAc,M","sources":["webpack://uligpro/./src/components/CheckingTicket/styles.module.scss?c1af","components/CheckingTicket/index.jsx","pages/Scanning.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__jlLQS\",\"media\":\"styles_media__E7izd\",\"media_img\":\"styles_media_img__qtF5z\",\"dark\":\"styles_dark__ZVSpf\",\"visible\":\"styles_visible__4UBRk\",\"main\":\"styles_main__Kfoa5\",\"main_title\":\"styles_main_title__egWE9\",\"main_text\":\"styles_main_text__x4COE\"};","// styling\nimport styles from \"./styles.module.scss\";\n\n// components\nimport Spring from \"@components/Spring\";\nimport { NavLink } from \"react-router-dom\";\nimport Lottie from \"lottie-react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\n// hooks\nimport { useThemeProvider } from \"@contexts/themeContext\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// utils\nimport { actionAfterPayment } from \"../../features/event/eventSlide\";\n\nimport { scanTicket } from \"./../../features/event/eventSlide\";\n\n// assets\nimport successScan from \"@assets/successScan.json\";\nimport failledScan from \"@assets/failledScan.json\";\nimport { useEffect } from \"react\";\n\nconst SCAN_TICKET = gql`\n  mutation GetTicketScanned($code: String!) {\n    getTicketScanned(code: $code) {\n      status\n      error {\n        code\n        message\n      }\n    }\n  }\n`;\n\nconst CheckingTicket = () => {\n  const { theme } = useThemeProvider();\n  const dispatch = useDispatch();\n  const [reqScanTicket, { data, loading }] = useMutation(SCAN_TICKET);\n\n  const status = useSelector((state) => state.events.status.ticket);\n  const error = useSelector((state) => state.events.error);\n  const message = useSelector((state) => state.events.message);\n\n  let { code } = useParams();\n\n  const checkTicket = async (code) => {\n    try {\n      await dispatch(\n        scanTicket({\n          scanTicketsFunc: reqScanTicket,\n          code: code,\n        })\n      ).unwrap();\n    } catch (error) {\n      //console.log(error);\n      toast.error(error.message);\n    }\n  };\n  useEffect(() => {\n    if (code !== \"\" && code !== null) {\n      //console.log(paymentId);\n      checkTicket(code);\n    }\n  }, [code]);\n  return (\n    <Spring\n      className={`${styles.container} card d-flex align-items-center flex-1`}\n    >\n      <div>\n        {status === \"failled\" && \"Ce code n'existe pas ou CONNECTEZ-VOUS\"}\n        {status === \"loading\" && \"LOADING\"}\n      </div>\n      {status === \"succeeded\" && (\n        <>\n          <div className={styles.media}>\n            <Spring className=\"d-flex align-items-center justify-content-center flex-2 w-500 h-500\">\n              <Lottie\n                animationData={error === null ? successScan : failledScan}\n              />\n              {/* <Lottie animationData={failledScan} /> */}\n            </Spring>\n          </div>\n          <div className={styles.main}>\n            <h2 className={styles.main_title}>\n              {error === null ? (\n                <span>{message}</span>\n              ) : (\n                <span>Ticket déjà scanné</span>\n              )}\n            </h2>\n            {error !== null && <p className={styles.main_text}>{error}</p>}\n            <NavLink\n              className=\"btn\"\n              style={{ marginTop: \"15px\" }}\n              onClick={() => {\n                window.close();\n              }}\n            >\n              Fermer\n            </NavLink>\n          </div>\n        </>\n      )}\n    </Spring>\n  );\n};\n\nexport default CheckingTicket;\n","// components\nimport PageHeader from \"@layout/PageHeader\";\nimport CheckingTicket from \"@components/CheckingTicket\";\n\nconst Scanning = () => {\n  return (\n    <>\n      <PageHeader title=\"Statut du ticket\" />\n      <CheckingTicket />\n    </>\n  );\n};\n\nexport default Scanning;\n"],"names":["SCAN_TICKET","gql","_templateObject","_taggedTemplateLiteral","CheckingTicket","theme","useThemeProvider","dispatch","useDispatch","reqScanTicket","data","loading","useMutation","status","useSelector","state","events","ticket","error","message","code","useParams","useEffect","async","scanTicket","scanTicketsFunc","unwrap","toast","checkTicket","_jsxs","Spring","className","concat","styles","children","_Fragment","_jsx","Lottie","animationData","successScan","failledScan","NavLink","style","marginTop","onClick","window","close","Scanning","PageHeader","title"],"sourceRoot":""}