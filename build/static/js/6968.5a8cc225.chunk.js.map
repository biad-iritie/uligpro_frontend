{"version":3,"file":"static/js/6968.5a8cc225.chunk.js","mappings":"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","sources":["../node_modules/@mui/base/TabPanel/tabPanelClasses.js","../node_modules/@mui/base/useTabPanel/useTabPanel.js","../node_modules/@mui/base/useCompound/useCompoundItem.js","../node_modules/@mui/base/TabPanel/TabPanel.js","../node_modules/@mui/base/Tabs/tabsClasses.js","../node_modules/@mui/base/useTabs/TabsProvider.js","../node_modules/@mui/base/Tabs/Tabs.js","../node_modules/@mui/base/useTabs/useTabs.js","../node_modules/@mui/base/Tabs/TabsContext.js","../node_modules/@mui/base/TabsList/tabsListClasses.js","../node_modules/@mui/base/useTabsList/useTabsList.types.js","../node_modules/@mui/base/useList/listActions.types.js","../node_modules/@mui/base/useList/listReducer.js","../node_modules/@mui/base/utils/useControllableReducer.js","../node_modules/@mui/base/utils/useTextNavigation.js","../node_modules/@mui/base/useList/useList.js","../node_modules/@mui/base/useTabsList/tabsListReducer.js","../node_modules/@mui/base/useList/ListContext.js","../node_modules/@mui/base/useTabsList/TabsListProvider.js","../node_modules/@mui/base/TabsList/TabsList.js","../node_modules/@mui/base/useTabsList/useTabsList.js","../node_modules/@mui/base/useCompound/useCompoundParent.js"],"sourcesContent":["import { generateUtilityClass } from '../generateUtilityClass';\nimport { generateUtilityClasses } from '../generateUtilityClasses';\nconst COMPONENT_NAME = 'TabPanel';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass(COMPONENT_NAME, slot);\n}\nexport const tabPanelClasses = generateUtilityClasses(COMPONENT_NAME, ['root', 'hidden']);","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { useCompoundItem } from '../useCompound';\nfunction tabPanelValueGenerator(otherTabPanelValues) {\n  return otherTabPanelValues.size;\n}\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabPanel API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab-panel)\n */\nfunction useTabPanel(parameters) {\n  const {\n    value: valueParam,\n    id: idParam,\n    rootRef: externalRef\n  } = parameters;\n  const context = useTabsContext();\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n  const {\n    value: selectedTabValue,\n    getTabId\n  } = context;\n  const id = useId(idParam);\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, externalRef);\n  const metadata = React.useMemo(() => ({\n    id,\n    ref\n  }), [id]);\n  const {\n    id: value\n  } = useCompoundItem(valueParam != null ? valueParam : tabPanelValueGenerator, metadata);\n  const hidden = value !== selectedTabValue;\n  const correspondingTabId = value !== undefined ? getTabId(value) : undefined;\n  const getRootProps = (externalProps = {}) => {\n    return _extends({\n      'aria-labelledby': correspondingTabId != null ? correspondingTabId : undefined,\n      hidden,\n      id: id != null ? id : undefined\n    }, externalProps, {\n      ref: handleRef\n    });\n  };\n  return {\n    hidden,\n    getRootProps,\n    rootRef: handleRef\n  };\n}\nexport { useTabPanel };","'use client';\n\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { CompoundComponentContext } from './useCompoundParent';\n/**\n * Registers a child component with the parent component.\n *\n * @param id A unique key for the child component. If the `id` is `undefined`, the registration logic will not run (this can sometimes be the case during SSR).\n *   This can be either a value, or a function that generates a value based on already registered siblings' ids.\n *   If a function, it's called with the set of the ids of all the items that have already been registered.\n *   Return `existingKeys.size` if you want to use the index of the new item as the id.\n * @param itemMetadata Arbitrary metadata to pass to the parent component. This should be a stable reference (for example a memoized object), to avoid unnecessary re-registrations.\n *\n * @ignore - internal hook.\n */\nexport function useCompoundItem(id, itemMetadata) {\n  const context = React.useContext(CompoundComponentContext);\n  if (context === null) {\n    throw new Error('useCompoundItem must be used within a useCompoundParent');\n  }\n  const {\n    registerItem\n  } = context;\n  const [registeredId, setRegisteredId] = React.useState(typeof id === 'function' ? undefined : id);\n  useEnhancedEffect(() => {\n    const {\n      id: returnedId,\n      deregister\n    } = registerItem(id, itemMetadata);\n    setRegisteredId(returnedId);\n    return deregister;\n  }, [registerItem, itemMetadata, id]);\n  return {\n    id: registeredId,\n    index: registeredId !== undefined ? context.getItemIndex(registeredId) : -1,\n    totalItemCount: context.totalSubitemCount\n  };\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"value\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { useTabPanel } from '../useTabPanel/useTabPanel';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    hidden\n  } = ownerState;\n  const slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabPanelUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [TabPanel API](https://mui.com/base-ui/react-tabs/components-api/#tab-panel)\n */\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    hidden,\n    getRootProps\n  } = useTabPanel(props);\n  const ownerState = _extends({}, props, {\n    hidden\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabPanelRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const tabPanelRootProps = useSlotProps({\n    elementType: TabPanelRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      role: 'tabpanel',\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({}, tabPanelRootProps, {\n    children: !hidden && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside the TabPanel.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabPanel.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\n   * If not provided, it will fall back to the index of the panel.\n   * It is recommended to explicitly provide it, as it's required for the tab panel to be rendered on the server.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport { TabPanel };","import { generateUtilityClass } from '../generateUtilityClass';\nimport { generateUtilityClasses } from '../generateUtilityClasses';\nconst COMPONENT_NAME = 'Tabs';\nexport function getTabsUtilityClass(slot) {\n  return generateUtilityClass(COMPONENT_NAME, slot);\n}\nexport const tabsClasses = generateUtilityClasses(COMPONENT_NAME, ['root', 'horizontal', 'vertical']);","'use client';\n\nimport * as React from 'react';\nimport { TabsContext } from '../Tabs/TabsContext';\nimport { CompoundComponentContext } from '../useCompound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Sets up the contexts for the underlying Tab and TabPanel components.\n *\n * @ignore - do not document.\n */\nexport function TabsProvider(props) {\n  const {\n    value: valueProp,\n    children\n  } = props;\n  const {\n    direction,\n    getItemIndex,\n    onSelected,\n    orientation,\n    registerItem,\n    registerTabIdLookup,\n    selectionFollowsFocus,\n    totalSubitemCount,\n    value,\n    getTabId,\n    getTabPanelId\n  } = valueProp;\n  const compoundComponentContextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount\n  }), [registerItem, getItemIndex, totalSubitemCount]);\n  const tabsContextValue = React.useMemo(() => ({\n    direction,\n    getTabId,\n    getTabPanelId,\n    onSelected,\n    orientation,\n    registerTabIdLookup,\n    selectionFollowsFocus,\n    value\n  }), [direction, getTabId, getTabPanelId, onSelected, orientation, registerTabIdLookup, selectionFollowsFocus, value]);\n  return /*#__PURE__*/_jsx(CompoundComponentContext.Provider, {\n    value: compoundComponentContextValue,\n    children: /*#__PURE__*/_jsx(TabsContext.Provider, {\n      value: tabsContextValue,\n      children: children\n    })\n  });\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"value\", \"defaultValue\", \"orientation\", \"direction\", \"onChange\", \"selectionFollowsFocus\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { getTabsUtilityClass } from './tabsClasses';\nimport { useTabs } from '../useTabs';\nimport { TabsProvider } from '../useTabs/TabsProvider';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation]\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabsUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [Tabs API](https://mui.com/base-ui/react-tabs/components-api/#tabs)\n */\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      orientation = 'horizontal',\n      direction = 'ltr',\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    orientation,\n    direction\n  });\n  const {\n    contextValue\n  } = useTabs(ownerState);\n  const classes = useUtilityClasses(ownerState);\n  const TabsRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const tabsRootProps = useSlotProps({\n    elementType: TabsRoot,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabsRoot, _extends({}, tabsRootProps, {\n    children: /*#__PURE__*/_jsx(TabsProvider, {\n      value: contextValue,\n      children: children\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The direction of the text.\n   * @default 'ltr'\n   */\n  direction: PropTypes.oneOf(['ltr', 'rtl']),\n  /**\n   * Callback invoked when new value is being set.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Tabs.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Tabs.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `null`.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport { Tabs };","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport { useCompoundParent } from '../useCompound';\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabs API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tabs)\n */\nfunction useTabs(parameters) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    orientation = 'horizontal',\n    direction = 'ltr',\n    selectionFollowsFocus = false\n  } = parameters;\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Tabs',\n    state: 'value'\n  });\n  const onSelected = React.useCallback((event, newValue) => {\n    setValue(newValue);\n    onChange == null || onChange(event, newValue);\n  }, [onChange, setValue]);\n  const {\n    subitems: tabPanels,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const tabIdLookup = React.useRef(() => undefined);\n  const getTabPanelId = React.useCallback(tabValue => {\n    var _tabPanels$get;\n    return (_tabPanels$get = tabPanels.get(tabValue)) == null ? void 0 : _tabPanels$get.id;\n  }, [tabPanels]);\n  const getTabId = React.useCallback(tabPanelId => {\n    return tabIdLookup.current(tabPanelId);\n  }, []);\n  const registerTabIdLookup = React.useCallback(lookupFunction => {\n    tabIdLookup.current = lookupFunction;\n  }, []);\n  return {\n    contextValue: _extends({\n      direction,\n      getTabId,\n      getTabPanelId,\n      onSelected,\n      orientation,\n      registerTabIdLookup,\n      selectionFollowsFocus,\n      value\n    }, compoundComponentContextValue)\n  };\n}\nexport { useTabs };","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst TabsContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  TabsContext.displayName = 'TabsContext';\n}\nexport function useTabsContext() {\n  const context = React.useContext(TabsContext);\n  if (context == null) {\n    throw new Error('No TabsContext provided');\n  }\n  return context;\n}\nexport { TabsContext };","import { generateUtilityClass } from '../generateUtilityClass';\nimport { generateUtilityClasses } from '../generateUtilityClasses';\nconst COMPONENT_NAME = 'TabsList';\nexport function getTabsListUtilityClass(slot) {\n  return generateUtilityClass(COMPONENT_NAME, slot);\n}\nexport const tabsListClasses = generateUtilityClasses(COMPONENT_NAME, ['root', 'horizontal', 'vertical']);","export const TabsListActionTypes = {\n  valueChange: 'valueChange'\n};","export const ListActionTypes = {\n  blur: 'list:blur',\n  focus: 'list:focus',\n  itemClick: 'list:itemClick',\n  itemHover: 'list:itemHover',\n  itemsChange: 'list:itemsChange',\n  keyDown: 'list:keyDown',\n  resetHighlight: 'list:resetHighlight',\n  highlightLast: 'list:highlightLast',\n  textNavigation: 'list:textNavigation',\n  clearSelection: 'list:clearSelection'\n};\n\n/**\n * A union of all standard actions that can be dispatched to the list reducer.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ListActionTypes } from './listActions.types';\n/**\n * Looks up the next valid item to highlight within the list.\n *\n * @param currentIndex The index of the start of the search.\n * @param lookupDirection Whether to look for the next or previous item.\n * @param items The array of items to search.\n * @param includeDisabledItems Whether to include disabled items in the search.\n * @param isItemDisabled A function that determines whether an item is disabled.\n * @param wrapAround Whether to wrap around the list when searching.\n * @returns The index of the next valid item to highlight or -1 if no valid item is found.\n */\nfunction findValidItemToHighlight(currentIndex, lookupDirection, items, includeDisabledItems, isItemDisabled, wrapAround) {\n  if (items.length === 0 || !includeDisabledItems && items.every((item, itemIndex) => isItemDisabled(item, itemIndex))) {\n    return -1;\n  }\n  let nextFocus = currentIndex;\n  for (;;) {\n    // No valid items found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === items.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n    const nextFocusDisabled = includeDisabledItems ? false : isItemDisabled(items[nextFocus], nextFocus);\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n      if (wrapAround) {\n        nextFocus = (nextFocus + items.length) % items.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\n/**\n * Gets the next item to highlight based on the current highlighted item and the search direction.\n *\n * @param previouslyHighlightedValue The item from which to start the search for the next candidate.\n * @param offset The offset from the previously highlighted item to search for the next candidate or a special named value ('reset', 'start', 'end').\n * @param context The list action context.\n *\n * @returns The next item to highlight or null if no item is valid.\n */\nexport function moveHighlight(previouslyHighlightedValue, offset, context) {\n  var _items$nextIndex;\n  const {\n    items,\n    isItemDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    itemComparer,\n    focusManagement\n  } = context;\n\n  // TODO: make this configurable\n  // The always should be an item highlighted when focus is managed by the DOM\n  // so that it's accessible by the `tab` key.\n  const defaultHighlightedIndex = focusManagement === 'DOM' ? 0 : -1;\n  const maxIndex = items.length - 1;\n  const previouslyHighlightedIndex = previouslyHighlightedValue == null ? -1 : items.findIndex(item => itemComparer(item, previouslyHighlightedValue));\n  let nextIndexCandidate;\n  let lookupDirection;\n  let wrapAround = !disableListWrap;\n  switch (offset) {\n    case 'reset':\n      if (defaultHighlightedIndex === -1) {\n        return null;\n      }\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'start':\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'end':\n      nextIndexCandidate = maxIndex;\n      lookupDirection = 'previous';\n      wrapAround = false;\n      break;\n    default:\n      {\n        const newIndex = previouslyHighlightedIndex + offset;\n        if (newIndex < 0) {\n          if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(offset) > 1) {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          } else {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          }\n        } else if (newIndex > maxIndex) {\n          if (!wrapAround || Math.abs(offset) > 1) {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          } else {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          }\n        } else {\n          nextIndexCandidate = newIndex;\n          lookupDirection = offset >= 0 ? 'next' : 'previous';\n        }\n      }\n  }\n  const nextIndex = findValidItemToHighlight(nextIndexCandidate, lookupDirection, items, disabledItemsFocusable, isItemDisabled, wrapAround);\n\n  // If there are no valid items to highlight, return the previously highlighted item (if it's still valid).\n  if (nextIndex === -1 && previouslyHighlightedValue !== null && !isItemDisabled(previouslyHighlightedValue, previouslyHighlightedIndex)) {\n    return previouslyHighlightedValue;\n  }\n  return (_items$nextIndex = items[nextIndex]) != null ? _items$nextIndex : null;\n}\n\n/**\n * Toggles the selection of an item.\n *\n * @param item Item to toggle.\n * @param selectedValues Already selected items.\n * @param selectionMode The number of items that can be simultanously selected.\n * @param itemComparer A custom item comparer function.\n *\n * @returns The new array of selected items.\n */\nexport function toggleSelection(item, selectedValues, selectionMode, itemComparer) {\n  if (selectionMode === 'none') {\n    return [];\n  }\n  if (selectionMode === 'single') {\n    // if the item to select has already been selected, return the original array\n    if (itemComparer(selectedValues[0], item)) {\n      return selectedValues;\n    }\n    return [item];\n  }\n\n  // The toggled item is selected; remove it from the selection.\n  if (selectedValues.some(sv => itemComparer(sv, item))) {\n    return selectedValues.filter(sv => !itemComparer(sv, item));\n  }\n\n  // The toggled item is not selected - add it to the selection.\n  return [...selectedValues, item];\n}\n\n/**\n * Handles item selection in a list.\n *\n * @param item - The item to be selected.\n * @param state - The current state of the list.\n * @param context - The context of the list action.\n * @returns The new state of the list after the item has been selected, or the original state if the item is disabled.\n */\nexport function handleItemSelection(item, state, context) {\n  const {\n    itemComparer,\n    isItemDisabled,\n    selectionMode,\n    items\n  } = context;\n  const {\n    selectedValues\n  } = state;\n  const itemIndex = items.findIndex(i => itemComparer(item, i));\n  if (isItemDisabled(item, itemIndex)) {\n    return state;\n  }\n\n  // if the item is already selected, remove it from the selection, otherwise add it\n  const newSelectedValues = toggleSelection(item, selectedValues, selectionMode, itemComparer);\n  return _extends({}, state, {\n    selectedValues: newSelectedValues,\n    highlightedValue: item\n  });\n}\nfunction handleKeyDown(key, state, context) {\n  const previouslySelectedValue = state.highlightedValue;\n  const {\n    orientation,\n    pageSize\n  } = context;\n  switch (key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'start', context)\n      });\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'end', context)\n      });\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize, context)\n      });\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, pageSize, context)\n      });\n    case 'ArrowUp':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -1, context)\n      });\n    case 'ArrowDown':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 1, context)\n      });\n    case 'ArrowLeft':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        const offset = orientation === 'horizontal-ltr' ? -1 : 1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, offset, context)\n        });\n      }\n    case 'ArrowRight':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        const offset = orientation === 'horizontal-ltr' ? 1 : -1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, offset, context)\n        });\n      }\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n      return handleItemSelection(state.highlightedValue, state, context);\n    default:\n      break;\n  }\n  return state;\n}\nfunction handleBlur(state, context) {\n  if (context.focusManagement === 'DOM') {\n    return state;\n  }\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\nfunction textCriteriaMatches(nextFocus, searchString, stringifyItem) {\n  var _stringifyItem;\n  const text = (_stringifyItem = stringifyItem(nextFocus)) == null ? void 0 : _stringifyItem.trim().toLowerCase();\n  if (!text || text.length === 0) {\n    // Make item not navigable if stringification fails or results in empty string.\n    return false;\n  }\n  return text.indexOf(searchString) === 0;\n}\nfunction handleTextNavigation(state, searchString, context) {\n  const {\n    items,\n    isItemDisabled,\n    disabledItemsFocusable,\n    getItemAsString\n  } = context;\n  const startWithCurrentItem = searchString.length > 1;\n  let nextItem = startWithCurrentItem ? state.highlightedValue : moveHighlight(state.highlightedValue, 1, context);\n  for (let index = 0; index < items.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextItem || !startWithCurrentItem && state.highlightedValue === nextItem) {\n      return state;\n    }\n    if (textCriteriaMatches(nextItem, searchString, getItemAsString) && (!isItemDisabled(nextItem, items.indexOf(nextItem)) || disabledItemsFocusable)) {\n      // The nextItem is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextItem\n      });\n    }\n    // Move to the next element.\n    nextItem = moveHighlight(nextItem, 1, context);\n  }\n\n  // No item matches the text search criteria\n  return state;\n}\nfunction handleItemsChange(items, previousItems, state, context) {\n  var _state$selectedValues;\n  const {\n    itemComparer,\n    focusManagement\n  } = context;\n  let newHighlightedValue = null;\n  if (state.highlightedValue != null) {\n    var _items$find;\n    newHighlightedValue = (_items$find = items.find(item => itemComparer(item, state.highlightedValue))) != null ? _items$find : null;\n  } else if (focusManagement === 'DOM' && previousItems.length === 0) {\n    newHighlightedValue = moveHighlight(null, 'reset', context);\n  }\n\n  // exclude selected values that are no longer in the items list\n  const selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];\n  const newSelectedValues = selectedValues.filter(selectedValue => items.some(item => itemComparer(item, selectedValue)));\n  return _extends({}, state, {\n    highlightedValue: newHighlightedValue,\n    selectedValues: newSelectedValues\n  });\n}\nfunction handleResetHighlight(state, context) {\n  return _extends({}, state, {\n    highlightedValue: moveHighlight(null, 'reset', context)\n  });\n}\nfunction handleHighlightLast(state, context) {\n  return _extends({}, state, {\n    highlightedValue: moveHighlight(null, 'end', context)\n  });\n}\nfunction handleClearSelection(state, context) {\n  return _extends({}, state, {\n    selectedValues: [],\n    highlightedValue: moveHighlight(null, 'reset', context)\n  });\n}\nexport function listReducer(state, action) {\n  const {\n    type,\n    context\n  } = action;\n  switch (type) {\n    case ListActionTypes.keyDown:\n      return handleKeyDown(action.key, state, context);\n    case ListActionTypes.itemClick:\n      return handleItemSelection(action.item, state, context);\n    case ListActionTypes.blur:\n      return handleBlur(state, context);\n    case ListActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, context);\n    case ListActionTypes.itemsChange:\n      return handleItemsChange(action.items, action.previousItems, state, context);\n    case ListActionTypes.resetHighlight:\n      return handleResetHighlight(state, context);\n    case ListActionTypes.highlightLast:\n      return handleHighlightLast(state, context);\n    case ListActionTypes.clearSelection:\n      return handleClearSelection(state, context);\n    default:\n      return state;\n  }\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nfunction areEqual(a, b) {\n  return a === b;\n}\nconst EMPTY_OBJECT = {};\nconst NOOP = () => {};\n\n/**\n * Gets the current state augmented with controlled values from the outside.\n * If a state item has a corresponding controlled value, it will be used instead of the internal state.\n */\nfunction getControlledState(internalState, controlledProps) {\n  const augmentedState = _extends({}, internalState);\n  Object.keys(controlledProps).forEach(key => {\n    if (controlledProps[key] !== undefined) {\n      augmentedState[key] = controlledProps[key];\n    }\n  });\n  return augmentedState;\n}\n/**\n * Defines an effect that compares the next state with the previous state and calls\n * the `onStateChange` callback if the state has changed.\n * The comparison is done based on the `stateComparers` parameter.\n */\nfunction useStateChangeDetection(parameters) {\n  const {\n    nextState,\n    initialState,\n    stateComparers,\n    onStateChange,\n    controlledProps,\n    lastActionRef\n  } = parameters;\n  const internalPreviousStateRef = React.useRef(initialState);\n  React.useEffect(() => {\n    if (lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    const previousState = getControlledState(internalPreviousStateRef.current, controlledProps);\n    Object.keys(nextState).forEach(key => {\n      var _stateComparers$key;\n      // go through all state keys and compare them with the previous state\n      const stateComparer = (_stateComparers$key = stateComparers[key]) != null ? _stateComparers$key : areEqual;\n      const nextStateItem = nextState[key];\n      const previousStateItem = previousState[key];\n      if (previousStateItem == null && nextStateItem != null || previousStateItem != null && nextStateItem == null || previousStateItem != null && nextStateItem != null && !stateComparer(nextStateItem, previousStateItem)) {\n        var _event, _type;\n        onStateChange == null || onStateChange((_event = lastActionRef.current.event) != null ? _event : null, key, nextStateItem, (_type = lastActionRef.current.type) != null ? _type : '', nextState);\n      }\n    });\n    internalPreviousStateRef.current = nextState;\n    lastActionRef.current = null;\n  }, [internalPreviousStateRef, nextState, lastActionRef, onStateChange, stateComparers, controlledProps]);\n}\n\n/**\n * The alternative to `React.useReducer` that lets you control the state from the outside.\n *\n * It can be used in an uncontrolled mode, similar to `React.useReducer`, or in a controlled mode, when the state is controlled by the props.\n * It also supports partially controlled state, when some state items are controlled and some are not.\n *\n * The controlled state items are provided via the `controlledProps` parameter.\n * When a reducer action is dispatched, the internal state is updated with the new values.\n * A change event (`onStateChange`) is then triggered (for each changed state item) if the new state is different from the previous state.\n * This event can be used to update the controlled values.\n *\n * The comparison of the previous and next states is done using the `stateComparers` parameter.\n * If a state item has a corresponding comparer, it will be used to determine if the state has changed.\n * This is useful when the state item is an object and you want to compare only a subset of its properties or if it's an array and you want to compare its contents.\n *\n * An additional feature is the `actionContext` parameter. It allows you to add additional properties to every action object,\n * similarly to how React context is implicitly available to every component.\n *\n * @template State - The type of the state calculated by the reducer.\n * @template Action - The type of the actions that can be dispatched.\n * @template ActionContext - The type of the additional properties that will be added to every action object.\n *\n * @ignore - internal hook.\n */\nexport function useControllableReducer(parameters) {\n  const lastActionRef = React.useRef(null);\n  const {\n    reducer,\n    initialState,\n    controlledProps = EMPTY_OBJECT,\n    stateComparers = EMPTY_OBJECT,\n    onStateChange = NOOP,\n    actionContext,\n    componentName = ''\n  } = parameters;\n  const controlledPropsRef = React.useRef(controlledProps);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      Object.keys(controlledProps).forEach(key => {\n        if (controlledPropsRef.current[key] !== undefined && controlledProps[key] === undefined) {\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing a controlled prop to be uncontrolled: ${key}`);\n        }\n        if (controlledPropsRef.current[key] === undefined && controlledProps[key] !== undefined) {\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing an uncontrolled prop to be controlled: ${key}`);\n        }\n      });\n    }, [controlledProps, componentName]);\n  }\n\n  // The reducer that is passed to React.useReducer is wrapped with a function that augments the state with controlled values.\n  const reducerWithControlledState = React.useCallback((state, action) => {\n    lastActionRef.current = action;\n    const controlledState = getControlledState(state, controlledProps);\n    const newState = reducer(controlledState, action);\n    return newState;\n  }, [controlledProps, reducer]);\n  const [nextState, dispatch] = React.useReducer(reducerWithControlledState, initialState);\n\n  // The action that is passed to dispatch is augmented with the actionContext.\n  const dispatchWithContext = React.useCallback(action => {\n    dispatch(_extends({}, action, {\n      context: actionContext\n    }));\n  }, [actionContext]);\n  useStateChangeDetection({\n    nextState,\n    initialState,\n    stateComparers: stateComparers != null ? stateComparers : EMPTY_OBJECT,\n    onStateChange: onStateChange != null ? onStateChange : NOOP,\n    controlledProps,\n    lastActionRef\n  });\n  return [getControlledState(nextState, controlledProps), dispatchWithContext];\n}","'use client';\n\nimport * as React from 'react';\nconst TEXT_NAVIGATION_RESET_TIMEOUT = 500; // milliseconds\n\n/**\n * @ignore - internal hook.\n *\n * Provides a handler for text navigation.\n * It's used to navigate a list by typing the first letters of the options.\n *\n * @param callback A function to be called when the navigation should be performed.\n * @returns A function to be used in a keydown event handler.\n */\nexport function useTextNavigation(callback) {\n  const textCriteriaRef = React.useRef({\n    searchString: '',\n    lastTime: null\n  });\n  return React.useCallback(event => {\n    if (event.key.length === 1 && event.key !== ' ') {\n      const textCriteria = textCriteriaRef.current;\n      const lowerKey = event.key.toLowerCase();\n      const currentTime = performance.now();\n      if (textCriteria.searchString.length > 0 && textCriteria.lastTime && currentTime - textCriteria.lastTime > TEXT_NAVIGATION_RESET_TIMEOUT) {\n        textCriteria.searchString = lowerKey;\n      } else if (textCriteria.searchString.length !== 1 || lowerKey !== textCriteria.searchString) {\n        // If there is just one character in the buffer and the key is the same, do not append\n        textCriteria.searchString += lowerKey;\n      }\n      textCriteria.lastTime = currentTime;\n      callback(textCriteria.searchString, event);\n    }\n  }, [callback]);\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { ListActionTypes } from './listActions.types';\nimport { listReducer as defaultReducer } from './listReducer';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { areArraysEqual } from '../utils/areArraysEqual';\nimport { useTextNavigation } from '../utils/useTextNavigation';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nconst EMPTY_OBJECT = {};\nconst NOOP = () => {};\nconst defaultItemComparer = (optionA, optionB) => optionA === optionB;\nconst defaultIsItemDisabled = () => false;\nconst defaultItemStringifier = item => typeof item === 'string' ? item : String(item);\nconst defaultGetInitialState = () => ({\n  highlightedValue: null,\n  selectedValues: []\n});\n\n/**\n * The useList is a lower-level utility that is used to build list-like components.\n * It's used to manage the state of the list and its items.\n *\n * Supports highlighting a single item and selecting an arbitrary number of items.\n *\n * The state of the list is managed by a controllable reducer - that is a reducer that can have its state\n * controlled from outside.\n *\n * By default, the state consists of `selectedValues` and `highlightedValue` but can be extended by the caller of the hook.\n * Also the actions that can be dispatched and the reducer function can be defined externally.\n *\n * @template ItemValue The type of the item values.\n * @template State The type of the list state. This should be a subtype of `ListState<ItemValue>`.\n * @template CustomAction The type of the actions that can be dispatched (besides the standard ListAction).\n * @template CustomActionContext The shape of additional properties that will be added to actions when dispatched.\n *\n * @ignore - internal hook.\n */\nfunction useList(params) {\n  const {\n    controlledProps = EMPTY_OBJECT,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    getInitialState = defaultGetInitialState,\n    getItemDomElement,\n    getItemId,\n    isItemDisabled = defaultIsItemDisabled,\n    rootRef: externalListRef,\n    onStateChange = NOOP,\n    items,\n    itemComparer = defaultItemComparer,\n    getItemAsString = defaultItemStringifier,\n    onChange,\n    onHighlightChange,\n    onItemsChange,\n    orientation = 'vertical',\n    pageSize = 5,\n    reducerActionContext = EMPTY_OBJECT,\n    selectionMode = 'single',\n    stateReducer: externalReducer,\n    componentName = 'useList'\n  } = params;\n  if (process.env.NODE_ENV !== 'production') {\n    if (focusManagement === 'DOM' && getItemDomElement == null) {\n      throw new Error('useList: The `getItemDomElement` prop is required when using the `DOM` focus management.');\n    }\n    if (focusManagement === 'activeDescendant' && getItemId == null) {\n      throw new Error('useList: The `getItemId` prop is required when using the `activeDescendant` focus management.');\n    }\n  }\n  const listRef = React.useRef(null);\n  const handleRef = useForkRef(externalListRef, listRef);\n  const handleHighlightChange = React.useCallback((event, value, reason) => {\n    onHighlightChange == null || onHighlightChange(event, value, reason);\n    if (focusManagement === 'DOM' && value != null && (reason === ListActionTypes.itemClick || reason === ListActionTypes.keyDown || reason === ListActionTypes.textNavigation)) {\n      var _getItemDomElement;\n      getItemDomElement == null || (_getItemDomElement = getItemDomElement(value)) == null || _getItemDomElement.focus();\n    }\n  }, [getItemDomElement, onHighlightChange, focusManagement]);\n  const stateComparers = React.useMemo(() => ({\n    highlightedValue: itemComparer,\n    selectedValues: (valuesArray1, valuesArray2) => areArraysEqual(valuesArray1, valuesArray2, itemComparer)\n  }), [itemComparer]);\n\n  // This gets called whenever a reducer changes the state.\n  const handleStateChange = React.useCallback((event, field, value, reason, state) => {\n    onStateChange == null || onStateChange(event, field, value, reason, state);\n    switch (field) {\n      case 'highlightedValue':\n        handleHighlightChange(event, value, reason);\n        break;\n      case 'selectedValues':\n        onChange == null || onChange(event, value, reason);\n        break;\n      default:\n        break;\n    }\n  }, [handleHighlightChange, onChange, onStateChange]);\n\n  // The following object is added to each action when it's dispatched.\n  // It's accessible in the reducer via the `action.context` field.\n  const listActionContext = React.useMemo(() => {\n    return {\n      disabledItemsFocusable,\n      disableListWrap,\n      focusManagement,\n      isItemDisabled,\n      itemComparer,\n      items,\n      getItemAsString,\n      onHighlightChange: handleHighlightChange,\n      orientation,\n      pageSize,\n      selectionMode,\n      stateComparers\n    };\n  }, [disabledItemsFocusable, disableListWrap, focusManagement, isItemDisabled, itemComparer, items, getItemAsString, handleHighlightChange, orientation, pageSize, selectionMode, stateComparers]);\n  const initialState = getInitialState();\n  const reducer = externalReducer != null ? externalReducer : defaultReducer;\n  const actionContext = React.useMemo(() => _extends({}, reducerActionContext, listActionContext), [reducerActionContext, listActionContext]);\n  const [state, dispatch] = useControllableReducer({\n    reducer,\n    actionContext,\n    initialState: initialState,\n    controlledProps,\n    stateComparers,\n    onStateChange: handleStateChange,\n    componentName\n  });\n  const {\n    highlightedValue,\n    selectedValues\n  } = state;\n  const handleTextNavigation = useTextNavigation((searchString, event) => dispatch({\n    type: ListActionTypes.textNavigation,\n    event,\n    searchString\n  }));\n  const previousItems = React.useRef([]);\n  React.useEffect(() => {\n    // Whenever the `items` object changes, we need to determine if the actual items changed.\n    // If they did, we need to dispatch an `itemsChange` action, so the selected/highlighted state is updated.\n    if (areArraysEqual(previousItems.current, items, itemComparer)) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemsChange,\n      event: null,\n      items,\n      previousItems: previousItems.current\n    });\n    previousItems.current = items;\n    onItemsChange == null || onItemsChange(items);\n  }, [items, itemComparer, dispatch, onItemsChange]);\n  const createHandleKeyDown = externalHandlers => event => {\n    var _externalHandlers$onK;\n    (_externalHandlers$onK = externalHandlers.onKeyDown) == null || _externalHandlers$onK.call(externalHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    const keysToPreventDefault = ['Home', 'End', 'PageUp', 'PageDown'];\n    if (orientation === 'vertical') {\n      keysToPreventDefault.push('ArrowUp', 'ArrowDown');\n    } else {\n      keysToPreventDefault.push('ArrowLeft', 'ArrowRight');\n    }\n    if (focusManagement === 'activeDescendant') {\n      // When the child element is focused using the activeDescendant attribute,\n      // the list handles keyboard events on its behalf.\n      // We have to `preventDefault()` is this case to prevent the browser from\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\n      keysToPreventDefault.push(' ', 'Enter');\n    }\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n    dispatch({\n      type: ListActionTypes.keyDown,\n      key: event.key,\n      event\n    });\n    handleTextNavigation(event);\n  };\n  const createHandleBlur = externalHandlers => event => {\n    var _externalHandlers$onB, _listRef$current;\n    (_externalHandlers$onB = externalHandlers.onBlur) == null || _externalHandlers$onB.call(externalHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if ((_listRef$current = listRef.current) != null && _listRef$current.contains(event.relatedTarget)) {\n      // focus remains within the list\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.blur,\n      event\n    });\n  };\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? getItemId(highlightedValue) : undefined,\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    }, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers)\n    });\n  };\n  const getItemState = React.useCallback(item => {\n    const selected = (selectedValues != null ? selectedValues : []).some(value => value != null && itemComparer(item, value));\n    const highlighted = highlightedValue != null && itemComparer(item, highlightedValue);\n    const focusable = focusManagement === 'DOM';\n    return {\n      focusable,\n      highlighted,\n      selected\n    };\n  }, [itemComparer, selectedValues, highlightedValue, focusManagement]);\n  const contextValue = React.useMemo(() => ({\n    dispatch,\n    getItemState\n  }), [dispatch, getItemState]);\n  React.useDebugValue({\n    state\n  });\n  return {\n    contextValue,\n    dispatch,\n    getRootProps,\n    rootRef: handleRef,\n    state\n  };\n}\nexport { useList };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { listReducer, ListActionTypes, moveHighlight } from '../useList';\nimport { TabsListActionTypes } from './useTabsList.types';\nexport function tabsListReducer(state, action) {\n  if (action.type === TabsListActionTypes.valueChange) {\n    return _extends({}, state, {\n      highlightedValue: action.value\n    });\n  }\n  const newState = listReducer(state, action);\n  const {\n    context: {\n      selectionFollowsFocus\n    }\n  } = action;\n  if (action.type === ListActionTypes.itemsChange) {\n    if (newState.selectedValues.length > 0) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValues[0]\n      });\n    }\n    moveHighlight(null, 'reset', action.context);\n  }\n  if (selectionFollowsFocus && newState.highlightedValue != null) {\n    return _extends({}, newState, {\n      selectedValues: [newState.highlightedValue]\n    });\n  }\n  return newState;\n}","import * as React from 'react';\nexport const ListContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}","'use client';\n\nimport * as React from 'react';\nimport { ListContext } from '../useList/ListContext';\nimport { CompoundComponentContext } from '../useCompound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Sets up the contexts for the underlying Tab components.\n *\n * @ignore - do not document.\n */\nexport function TabsListProvider(props) {\n  const {\n    value,\n    children\n  } = props;\n  const {\n    dispatch,\n    getItemIndex,\n    getItemState,\n    registerItem,\n    totalSubitemCount\n  } = value;\n  const listContextValue = React.useMemo(() => ({\n    dispatch,\n    getItemState,\n    getItemIndex\n  }), [dispatch, getItemIndex, getItemState]);\n  const compoundComponentContextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount\n  }), [registerItem, getItemIndex, totalSubitemCount]);\n  return /*#__PURE__*/_jsx(CompoundComponentContext.Provider, {\n    value: compoundComponentContextValue,\n    children: /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: listContextValue,\n      children: children\n    })\n  });\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils';\nimport { getTabsListUtilityClass } from './tabsListClasses';\nimport { useTabsList } from '../useTabsList';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { TabsListProvider } from '../useTabsList/TabsListProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation]\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabsListUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [TabsList API](https://mui.com/base-ui/react-tabs/components-api/#tabs-list)\n */\nconst TabsList = /*#__PURE__*/React.forwardRef(function TabsList(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isRtl,\n    orientation,\n    getRootProps,\n    contextValue\n  } = useTabsList({\n    rootRef: forwardedRef\n  });\n  const ownerState = _extends({}, props, {\n    isRtl,\n    orientation\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabsListRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const tabsListRootProps = useSlotProps({\n    elementType: TabsListRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabsListProvider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(TabsListRoot, _extends({}, tabsListRootProps, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabsList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside the TabsList.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabsList.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { TabsList };","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTabsContext } from '../Tabs';\nimport { TabsListActionTypes } from './useTabsList.types';\nimport { useCompoundParent } from '../useCompound';\nimport { useList } from '../useList';\nimport { tabsListReducer } from './tabsListReducer';\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabsList API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tabs-list)\n */\nfunction useTabsList(parameters) {\n  var _selectedValues$;\n  const {\n    rootRef: externalRef\n  } = parameters;\n  const {\n    direction = 'ltr',\n    onSelected,\n    orientation = 'horizontal',\n    value,\n    registerTabIdLookup,\n    selectionFollowsFocus\n  } = useTabsContext();\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const tabIdLookup = React.useCallback(tabValue => {\n    var _subitems$get;\n    return (_subitems$get = subitems.get(tabValue)) == null ? void 0 : _subitems$get.id;\n  }, [subitems]);\n  registerTabIdLookup(tabIdLookup);\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getTabElement = React.useCallback(tabValue => {\n    var _subitems$get$ref$cur, _subitems$get2;\n    if (tabValue == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get2 = subitems.get(tabValue)) == null ? void 0 : _subitems$get2.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const isRtl = direction === 'rtl';\n  let listOrientation;\n  if (orientation === 'vertical') {\n    listOrientation = 'vertical';\n  } else {\n    listOrientation = isRtl ? 'horizontal-rtl' : 'horizontal-ltr';\n  }\n  const handleChange = React.useCallback((event, newValue) => {\n    var _newValue$;\n    onSelected(event, (_newValue$ = newValue[0]) != null ? _newValue$ : null);\n  }, [onSelected]);\n  const controlledProps = React.useMemo(() => {\n    if (value === undefined) {\n      return {};\n    }\n    return value != null ? {\n      selectedValues: [value]\n    } : {\n      selectedValues: []\n    };\n  }, [value]);\n  const isItemDisabled = React.useCallback(item => {\n    var _subitems$get$disable, _subitems$get3;\n    return (_subitems$get$disable = (_subitems$get3 = subitems.get(item)) == null ? void 0 : _subitems$get3.disabled) != null ? _subitems$get$disable : false;\n  }, [subitems]);\n  const {\n    contextValue: listContextValue,\n    dispatch,\n    getRootProps: getListboxRootProps,\n    state: {\n      highlightedValue,\n      selectedValues\n    },\n    rootRef: mergedRootRef\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: !selectionFollowsFocus,\n    focusManagement: 'DOM',\n    getItemDomElement: getTabElement,\n    isItemDisabled,\n    items: subitemKeys,\n    rootRef: externalRef,\n    onChange: handleChange,\n    orientation: listOrientation,\n    reducerActionContext: React.useMemo(() => ({\n      selectionFollowsFocus: selectionFollowsFocus || false\n    }), [selectionFollowsFocus]),\n    selectionMode: 'single',\n    stateReducer: tabsListReducer\n  });\n  React.useEffect(() => {\n    if (value === undefined) {\n      return;\n    }\n\n    // when a value changes externally, the highlighted value should be synced to it\n    if (value != null) {\n      dispatch({\n        type: TabsListActionTypes.valueChange,\n        value\n      });\n    }\n  }, [dispatch, value]);\n  const getRootProps = (externalProps = {}) => {\n    return _extends({}, externalProps, getListboxRootProps(externalProps), {\n      'aria-orientation': orientation === 'vertical' ? 'vertical' : undefined,\n      role: 'tablist'\n    });\n  };\n  const contextValue = React.useMemo(() => _extends({}, compoundComponentContextValue, listContextValue), [compoundComponentContextValue, listContextValue]);\n  return {\n    contextValue,\n    dispatch,\n    getRootProps,\n    highlightedValue,\n    isRtl,\n    orientation,\n    rootRef: mergedRootRef,\n    selectedValue: (_selectedValues$ = selectedValues[0]) != null ? _selectedValues$ : null\n  };\n}\nexport { useTabsList };","'use client';\n\nimport * as React from 'react';\nexport const CompoundComponentContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  CompoundComponentContext.displayName = 'CompoundComponentContext';\n}\n/**\n * Sorts the subitems by their position in the DOM.\n */\nfunction sortSubitems(subitems) {\n  const subitemsArray = Array.from(subitems.keys()).map(key => {\n    const subitem = subitems.get(key);\n    return {\n      key,\n      subitem\n    };\n  });\n  subitemsArray.sort((a, b) => {\n    const aNode = a.subitem.ref.current;\n    const bNode = b.subitem.ref.current;\n    if (aNode === null || bNode === null || aNode === bNode) {\n      return 0;\n    }\n\n    // eslint-disable-next-line no-bitwise\n    return aNode.compareDocumentPosition(bNode) & Node.DOCUMENT_POSITION_PRECEDING ? 1 : -1;\n  });\n  return new Map(subitemsArray.map(item => [item.key, item.subitem]));\n}\n\n/**\n * Provides a way for a component to know about its children.\n *\n * Child components register themselves with the `useCompoundItem` hook, passing in arbitrary metadata to the parent.\n *\n * This is a more powerful altervantive to `children` traversal, as child components don't have to be placed\n * directly inside the parent component. They can be anywhere in the tree (and even rendered by other components).\n *\n * The downside is that this doesn't work with SSR as it relies on the useEffect hook.\n *\n * @ignore - internal hook.\n */\nexport function useCompoundParent() {\n  const [subitems, setSubitems] = React.useState(new Map());\n  const subitemKeys = React.useRef(new Set());\n  const deregisterItem = React.useCallback(function deregisterItem(id) {\n    subitemKeys.current.delete(id);\n    setSubitems(previousState => {\n      const newState = new Map(previousState);\n      newState.delete(id);\n      return newState;\n    });\n  }, []);\n  const registerItem = React.useCallback(function registerItem(id, item) {\n    let providedOrGeneratedId;\n    if (typeof id === 'function') {\n      providedOrGeneratedId = id(subitemKeys.current);\n    } else {\n      providedOrGeneratedId = id;\n    }\n    subitemKeys.current.add(providedOrGeneratedId);\n    setSubitems(previousState => {\n      const newState = new Map(previousState);\n      newState.set(providedOrGeneratedId, item);\n      return newState;\n    });\n    return {\n      id: providedOrGeneratedId,\n      deregister: () => deregisterItem(providedOrGeneratedId)\n    };\n  }, [deregisterItem]);\n  const sortedSubitems = React.useMemo(() => sortSubitems(subitems), [subitems]);\n  const getItemIndex = React.useCallback(function getItemIndex(id) {\n    return Array.from(sortedSubitems.keys()).indexOf(id);\n  }, [sortedSubitems]);\n  const contextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount: subitems.size\n  }), [getItemIndex, registerItem, subitems.size]);\n  return {\n    contextValue,\n    subitems: sortedSubitems\n  };\n}"],"names":["COMPONENT_NAME","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","tabPanelValueGenerator","otherTabPanelValues","size","useTabPanel","parameters","value","valueParam","id","idParam","rootRef","externalRef","context","useTabsContext","Error","selectedTabValue","getTabId","useId","ref","React","handleRef","useForkRef","metadata","itemMetadata","CompoundComponentContext","registerItem","registeredId","setRegisteredId","undefined","useEnhancedEffect","returnedId","deregister","index","getItemIndex","totalItemCount","totalSubitemCount","useCompoundItem","hidden","correspondingTabId","getRootProps","externalProps","arguments","length","_extends","_excluded","TabPanel","props","forwardedRef","_slots$root","children","slotProps","slots","other","_objectWithoutPropertiesLoose","ownerState","classes","root","composeClasses","useClassNamesOverride","useUtilityClasses","TabPanelRoot","tabPanelRootProps","useSlotProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","additionalProps","role","className","_jsx","getTabsUtilityClass","TabsProvider","valueProp","direction","onSelected","orientation","registerTabIdLookup","selectionFollowsFocus","getTabPanelId","compoundComponentContextValue","tabsContextValue","Provider","TabsContext","Tabs","contextValue","defaultValue","onChange","setValue","useControlled","controlled","default","name","state","event","newValue","subitems","tabPanels","useCompoundParent","tabIdLookup","tabValue","_tabPanels$get","get","tabPanelId","current","lookupFunction","useTabs","TabsRoot","tabsRootProps","getTabsListUtilityClass","TabsListActionTypes","valueChange","ListActionTypes","blur","focus","itemClick","itemHover","itemsChange","keyDown","resetHighlight","highlightLast","textNavigation","clearSelection","moveHighlight","previouslyHighlightedValue","offset","_items$nextIndex","items","isItemDisabled","disableListWrap","disabledItemsFocusable","itemComparer","focusManagement","defaultHighlightedIndex","maxIndex","previouslyHighlightedIndex","findIndex","item","nextIndexCandidate","lookupDirection","wrapAround","newIndex","Math","abs","nextIndex","currentIndex","includeDisabledItems","every","itemIndex","nextFocus","findValidItemToHighlight","handleItemSelection","selectionMode","selectedValues","i","newSelectedValues","some","sv","filter","toggleSelection","highlightedValue","textCriteriaMatches","searchString","stringifyItem","_stringifyItem","text","trim","toLowerCase","indexOf","listReducer","action","type","key","previouslySelectedValue","pageSize","handleKeyDown","handleBlur","getItemAsString","startWithCurrentItem","nextItem","handleTextNavigation","previousItems","_state$selectedValues","newHighlightedValue","_items$find","find","selectedValue","handleItemsChange","handleResetHighlight","handleHighlightLast","handleClearSelection","areEqual","a","b","EMPTY_OBJECT","NOOP","getControlledState","internalState","controlledProps","augmentedState","Object","keys","forEach","useControllableReducer","lastActionRef","reducer","initialState","stateComparers","onStateChange","actionContext","componentName","reducerWithControlledState","controlledState","nextState","dispatch","dispatchWithContext","internalPreviousStateRef","previousState","_stateComparers$key","stateComparer","nextStateItem","previousStateItem","_event","_type","useStateChangeDetection","TEXT_NAVIGATION_RESET_TIMEOUT","defaultItemComparer","optionA","optionB","defaultIsItemDisabled","defaultItemStringifier","String","defaultGetInitialState","useList","params","getInitialState","getItemDomElement","getItemId","externalListRef","onHighlightChange","onItemsChange","reducerActionContext","stateReducer","externalReducer","listRef","handleHighlightChange","reason","_getItemDomElement","valuesArray1","valuesArray2","areArraysEqual","handleStateChange","field","listActionContext","defaultReducer","callback","textCriteriaRef","lastTime","textCriteria","lowerKey","currentTime","performance","now","useTextNavigation","createHandleKeyDown","externalHandlers","_externalHandlers$onK","onKeyDown","call","defaultMuiPrevented","keysToPreventDefault","push","includes","preventDefault","getItemState","selected","highlighted","focusable","externalEventHandlers","extractEventHandlers","tabIndex","onBlur","_externalHandlers$onB","_listRef$current","contains","relatedTarget","tabsListReducer","newState","ListContext","TabsListProvider","listContextValue","TabsList","isRtl","_selectedValues$","_subitems$get","subitemKeys","Array","from","getTabElement","_subitems$get$ref$cur","_subitems$get2","listOrientation","handleChange","_newValue$","_subitems$get$disable","_subitems$get3","disabled","getListboxRootProps","mergedRootRef","useTabsList","TabsListRoot","tabsListRootProps","setSubitems","Map","Set","deregisterItem","delete","providedOrGeneratedId","add","set","sortedSubitems","subitemsArray","map","subitem","sort","aNode","bNode","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","sortSubitems"],"sourceRoot":""}