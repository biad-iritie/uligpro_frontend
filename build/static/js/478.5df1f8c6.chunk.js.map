{"version":3,"file":"static/js/478.5df1f8c6.chunk.js","mappings":"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","sources":["webpack://uligpro/./src/components/VerifyPayment/styles.module.scss?0598","components/VerifyPayment/index.jsx","pages/Verify.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__6iyn2\",\"media\":\"styles_media__mIaxd\",\"media_img\":\"styles_media_img__dwdaS\",\"dark\":\"styles_dark__v7QoM\",\"visible\":\"styles_visible__-TfKN\",\"main\":\"styles_main__bqzTy\",\"main_title\":\"styles_main_title__DgNms\",\"main_text\":\"styles_main_text__PT4G0\"};","// styling\nimport styles from \"./styles.module.scss\";\n\n// components\nimport { CircularProgress } from \"@mui/material\";\nimport Spring from \"@components/Spring\";\nimport { NavLink } from \"react-router-dom\";\nimport Lottie from \"lottie-react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\n// hooks\nimport { useThemeProvider } from \"@contexts/themeContext\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\";\n\n// utils\nimport { actionAfterPayment } from \"../../features/event/eventSlide\";\nimport classNames from \"classnames\";\nimport { scanTicket } from \"../../features/event/eventSlide\";\n\n// assets\nimport successScan from \"@assets/successScan.json\";\nimport failledScan from \"@assets/failledScan.json\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst CHECK_PAYMENT = gql`\n  mutation ActionAfterPayment($idTransaction: String!) {\n    actionAfterPayment(idTransaction: $idTransaction) {\n      message\n    }\n  }\n`;\n\nconst VerifyPayment = () => {\n  const { theme } = useThemeProvider();\n  const dispatch = useDispatch();\n  const [checkPayment] = useMutation(CHECK_PAYMENT);\n\n  const status = useSelector((state) => state.events.status.ticket);\n  const error = useSelector((state) => state.events.error);\n  const message = useSelector((state) => state.events.message);\n  const [isFilling, setIsFilling] = useState(true);\n  //let { code } = useParams();\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    defaultValues: {\n      id_transaction: \"\",\n      //rememberMe: false,\n    },\n  });\n  const onSubmit = async (data, e) => {\n    //console.log(data.id_transaction);\n    e.preventDefault();\n    try {\n      setIsFilling(false);\n      await dispatch(\n        actionAfterPayment({\n          actionAfterPaymentFunc: checkPayment,\n          idTransaction: data.id_transaction,\n        })\n      ).unwrap();\n    } catch (error) {\n      //console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <Spring\n      className={`${styles.container} card d-flex align-items-center flex-1`}\n    >\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div\n          className=\"d-flex flex-column g-20\"\n          style={{ margin: \"20px 0 30px\", width: \"340px\" }}\n        >\n          {isFilling ? (\n            <div className=\"d-flex flex-column g-20\">\n              <input\n                className={classNames(\"field\", { \"field--error\": errors })}\n                type=\"text\"\n                placeholder=\"Entrer le numero de la transaction\"\n                disabled={status === \"loading\" ? true : false}\n                {...register(\"id_transaction\", { required: true })}\n              />\n            </div>\n          ) : (\n            <>\n              <div className={styles.media}>\n                <Spring className=\"d-flex align-items-center justify-content-center flex-1 w-100 h-100\">\n                  <Lottie\n                    animationData={\n                      (status === \"succeeded\" &&\n                        message === \"SUCCESS\" &&\n                        successScan) ||\n                      (status === \"succeeded\" &&\n                        message === \"FAILLED\" &&\n                        failledScan)\n                    }\n                  />\n                </Spring>\n              </div>\n              <div className={styles.main}>\n                <h2 className={styles.main_title}>\n                  <span>\n                    {message === \"SUCCESS\" && \"Paiement effectué avec succès\"}\n                    {message === \"FAILLED\" && \"Paiement n'a pas été effectué\"}\n                    {status === \"failed\" &&\n                      \"Le numero de paiment n'existe pas \"}\n                  </span>\n                </h2>\n              </div>\n            </>\n          )}\n        </div>\n        {status === \"loading\" ? (\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <CircularProgress color=\"success\" style={{ margin: \"auto\" }} />\n          </div>\n        ) : (\n          <div className=\"d-flex justify-content-between align-items-center\">\n            {isFilling ? (\n              <button\n                className=\"btn btn--sm\"\n                type=\"submit\"\n                style={{ marginLeft: \"120px\" }}\n              >\n                Verifier\n              </button>\n            ) : (\n              <NavLink\n                className=\"btn\"\n                style={{ marginLeft: \"120px\" }}\n                onClick={() => {\n                  reset({ id_transaction: \"\" });\n                  setIsFilling(true);\n                }}\n              >\n                Nouveau\n              </NavLink>\n            )}\n          </div>\n        )}\n\n        {/* <button\n            className=\"btn btn--sm\"\n            type=\"submit\"\n            onClick={handleSubmit(onSubmit)}\n          >\n            Connexion\n          </button>\n          <button\n            className=\"text-button text-button--sm\"\n            onClick={handleResetPassword}\n          >\n            Oublié mot de passe\n          </button> */}\n      </form>\n    </Spring>\n  );\n};\n\nexport default VerifyPayment;\n","// components\nimport PageHeader from \"@layout/PageHeader\";\nimport VerifyPayment from \"@components/VerifyPayment\";\n\nconst Verify = () => {\n  return (\n    <>\n      <PageHeader title=\"Verification du paiement\" />\n      <VerifyPayment />\n    </>\n  );\n};\n\nexport default Verify;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["CHECK_PAYMENT","gql","_templateObject","_taggedTemplateLiteral","VerifyPayment","theme","useThemeProvider","dispatch","useDispatch","checkPayment","useMutation","status","useSelector","state","events","ticket","message","error","isFilling","setIsFilling","useState","register","reset","handleSubmit","formState","errors","control","useForm","defaultValues","id_transaction","_jsx","Spring","className","concat","styles","children","_jsxs","onSubmit","async","data","e","preventDefault","actionAfterPayment","actionAfterPaymentFunc","idTransaction","unwrap","toast","style","margin","width","classNames","type","placeholder","disabled","required","_Fragment","Lottie","animationData","successScan","failledScan","CircularProgress","color","marginLeft","NavLink","onClick","Verify","PageHeader","title","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject2","_templateObject3","_templateObject4","_excluded","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","props","ownerState","root","variant","capitalize","_ref","_extends","display","transition","transitions","create","vars","palette","main","_ref2","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","React","inProps","ref","useThemeProps","size","thickness","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","height","role","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}