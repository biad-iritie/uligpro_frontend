{"version":3,"file":"static/js/752.fec3656e.chunk.js","mappings":"yKAUA,MAmBA,EAnBkBA,IAAuD,IAAtD,IAACC,EAAG,IAAEC,EAAG,OAAEC,EAAS,OAAM,UAAEC,KAAcC,GAAML,EAC/D,OACIM,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CACVN,IAAKA,EACLC,IAAKA,EACLC,OAAQA,EACRK,iBAAgB,cAAAC,OAAgBL,GAAa,OACzCC,GACN,C,0ECfV,MAyBA,EAzBsBL,IAA2B,IAA1B,SAACU,KAAaL,GAAML,EACvC,MAAOW,EAAmBC,IAAwBC,EAAAA,EAAAA,WAAS,GAW3D,OAJAC,EAAAA,EAAAA,YAAU,KACU,KAAhBT,EAAMU,OAAgBH,GAAqB,EAAM,GAClD,CAACP,EAAMU,SAGNC,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,gBAAea,SAAA,EAC1BX,EAAAA,EAAAA,KAAA,SAAOF,UAAU,QACVc,KAAMP,EAAoB,OAAS,WACnCQ,IAAKT,KACDL,KACXC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,YAAYgB,QAfLC,IAC7BA,EAAEC,iBACFV,GAAsBD,EAAkB,EAa6B,aAAW,6BAA4BM,UACpGX,EAAAA,EAAAA,KAAA,KAAGF,UAAS,gBAAAK,OAAkBE,EAAoB,SAAW,UAE/D,C,oHCbd,MAqDA,EArD2BX,IAAwB,IAAvB,KAAEuB,EAAI,QAAEC,GAASxB,EAC3C,MAAM,SACJyB,EAAQ,aACRC,EACAC,WAAW,OAAEC,GAAQ,MACrBC,IACEC,EAAAA,EAAAA,MAEEC,EAAcA,KAClBF,IACAL,GAAS,EAQX,OACElB,EAAAA,EAAAA,KAAC0B,EAAAA,QAAK,CAACT,KAAMA,EAAMC,QAASO,EAAYd,UACtCD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,0BAAyBa,SAAA,EACtCD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,0BAAyBa,SAAA,EACtCX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,oBACJX,EAAAA,EAAAA,KAAA,KAAAW,SAAG,yFAKLD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,0BAAyBa,SAAA,EACtCD,EAAAA,EAAAA,MAAA,QAAMZ,UAAU,cAAc6B,SAAUP,GAhB9BQ,IAChBC,EAAAA,GAAMC,KAAK,4BAAD3B,OAA6ByB,EAAKG,QAC5CN,GAAa,IAcwDd,SAAA,EAC7DX,EAAAA,EAAAA,KAAA,SACEF,UAAWkC,IAAW,QAAS,CAAE,eAAgBV,EAAOS,QACxDnB,KAAK,OACLqB,YAAY,wBACRd,EAAS,QAAS,CAAEe,UAAU,EAAMC,QAAS,kBAEnDnC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,MAAKa,SAAC,aAE1BX,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAASa,SAAC,8FAMrB,C,mKCnDZ,MA0BA,EA1B8ByB,KAEtB1B,EAAAA,EAAAA,MAAC2B,EAAAA,EAAM,CAACvC,UAAU,2CAA0Ca,SAAA,EACxDX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,4BACJD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,0BAAyBa,SAAA,EACpCD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,iCAAgCa,SAAA,EAC3CX,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,CAACC,GAAG,YAAYC,MAAM,WACpCxC,EAAAA,EAAAA,KAAA,SAAOyC,QAAQ,YAAW9B,SAAC,4BAE/BD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,iCAAgCa,SAAA,EAC3CX,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,CAACC,GAAG,YAAYC,MAAM,WACpCxC,EAAAA,EAAAA,KAAA,SAAOyC,QAAQ,YAAW9B,SAAC,2BAE/BD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,iCAAgCa,SAAA,EAC3CX,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,CAACC,GAAG,YAAYC,MAAM,WACpCxC,EAAAA,EAAAA,KAAA,SAAOyC,QAAQ,YAAW9B,SAAC,4BAE/BD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,iCAAgCa,SAAA,EAC3CX,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,CAACC,GAAG,YAAYC,MAAM,WACpCxC,EAAAA,EAAAA,KAAA,SAAOyC,QAAQ,YAAW9B,SAAC,0B,0BChB/C,MAgCA,EAhC8B+B,KAC1B,MAAOjC,EAAOkC,IAAYpC,EAAAA,EAAAA,UAAS,CAAC,EAAG,KAUvC,OACIG,EAAAA,EAAAA,MAAC2B,EAAAA,EAAM,CAACvC,UAAU,uEAAsEa,SAAA,EACpFD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,4BACJX,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAASa,SAAC,oDAE3BD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,0BAAyBa,SAAA,EACpCX,EAAAA,EAAAA,KAAC4C,EAAAA,EAAiB,CAACnC,MAAOA,EACPoC,IAAK,EACLC,IAAK,GACLC,KAAM,GACNC,UAAU,yBACVC,UAAYC,GApBtBA,KACjB,MAAMC,EAAUC,KAAKC,MAAY,EAANH,GAAW,EAChCI,EAAQF,KAAKG,MAAMJ,GAGzB,OAAOG,EAAQ,KAFqB,IAAnBH,EAAUG,IACGE,UAAUC,SAAS,EAAG,IAClB,EAeaC,CAAYR,GAChCS,SAAUA,CAAC5C,EAAGmC,IAAQP,EAASO,GAC/BU,kBAAkB,QACrC5D,EAAAA,EAAAA,KAAA,UAAQF,UAAU,MAAKa,SAAC,eAEvB,EClCjB,GAAgB,KAAO,qBAAqB,KAAO,qBAAqB,SAAW,yBAAyB,MAAQ,sBAAsB,KAAO,qBAAqB,WAAa,2BAA2B,SAAW,0B,eCAzN,SAAgB,MAAQ,sBAAsB,MAAQ,sBAAsB,KAAO,sB,cCQnF,MAgBA,EAhBcjB,IAAsC,IAArC,UAACI,EAAS,KAAE+D,EAAI,GAAEtB,KAAOxC,GAAML,EAC1C,MAAM,MAACoE,IAASC,EAAAA,EAAAA,KAEhB,OACIrD,EAAAA,EAAAA,MAAA,OAAKZ,UAAS,GAAAK,OAAK6D,EAAOC,MAAK,KAAA9D,OAAI6D,EAAOF,GAAM,KAAA3D,OAAIL,GAAwB,IAAKa,SAAA,EAC7EX,EAAAA,EAAAA,KAAA,SAAOY,KAAK,QAAQ2B,GAAIA,EAAIsB,KAAMA,KAAU9D,KAC5CC,EAAAA,EAAAA,KAAA,SAAOyC,QAASF,MACd,E,8CCmCd,MACA,EAAe,IAA0B,+DCpBzC,MACA,EAAe,IAA0B,yDCZnCX,EAAO,CACT,CAACW,GAAI,SAAU3B,KAAM,OAAQsD,OAAQ,iBAAkBC,SAAU,IAAIC,MACrE,CAAC7B,GAAI,SAAU3B,KAAM,aAAcsD,OAAQ,mBAAoBC,SAAU,IAAIC,KAAK,KAAM,EAAG,KAC3F,CAAC7B,GAAI,SAAU3B,KAAM,OAAQsD,OAAQ,mBAAoBC,SAAU,IAAIC,KAAK,KAAM,EAAG,IACrF,CAAC7B,GAAI,SAAU3B,KAAM,OAAQsD,OAAQ,mBAAoBC,SAAU,IAAIC,KAAK,KAAM,EAAG,KACrF,CAAC7B,GAAI,SAAU3B,KAAM,aAAcsD,OAAQ,mBAAoBC,SAAU,IAAIC,KAAK,KAAM,GAAI,KAgDhG,EA7CsBC,KAClB,MAAM,MAACP,IAASC,EAAAA,EAAAA,MACTO,EAAUC,IAAehE,EAAAA,EAAAA,UAASqB,EAAK,GAAGW,KAC1CiC,GAAYC,OAAQC,KAAiBC,EAAAA,EAAAA,MACrCC,GAAYH,OAAQI,KAAiBF,EAAAA,EAAAA,KAE5C,OACIjE,EAAAA,EAAAA,MAAC2B,EAAAA,EAAM,CAACvC,UAAU,8BAA6Ba,SAAA,EAC3CX,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAcgF,MAAO,CAACC,cAAe,IAAKlE,IAAK2D,EAAU7D,SAAC,oBAGxEX,EAAAA,EAAAA,KAACgF,EAAAA,EAAe,CAACP,OAAQC,EAAeG,EAAalE,UACjDX,EAAAA,EAAAA,KAAA,OAAKF,UAAS,GAAAK,OAAK6D,EAAOiB,KAAI,UAAStE,SAE/BiB,EAAKsD,KAAI,CAACC,EAAMC,KACZ1E,EAAAA,EAAAA,MAAC2B,EAAAA,EAAM,CAACvC,UAAS,GAAAK,OAAK6D,EAAOmB,KAAI,KAAAhF,OAAI6D,EAAOF,GAAM,KAAA3D,OAAImE,IAAaa,EAAK5C,GAAKyB,EAAOM,SAAW,IACvF1D,KAAK,UAELwE,MAAOA,EAAMzE,SAAA,EACjBX,EAAAA,EAAAA,KAAA,OAAKF,UAAWkE,EAAOqB,WAAW1E,UAC9BX,EAAAA,EAAAA,KAAA,OAAKL,IAAmB,SAAdwF,EAAKvE,KAAkB0E,EAAOC,EAAI3F,IAAKuF,EAAKvE,UAE1DF,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,SAAQa,SAAA,EACnBX,EAAAA,EAAAA,KAAA,QAAMF,UAAWkE,EAAOwB,SAAS7E,UAAE8E,EAAAA,EAAAA,IAAiBN,EAAKjB,WACzDxD,EAAAA,EAAAA,MAAA,KAAGZ,UAAU,WAAUa,SAAA,CAAC,cACR+E,IAAMP,EAAKhB,UAAUwB,OAAO,sBAGhD3F,EAAAA,EAAAA,KAAC4F,EAAK,CAAC/B,KAAK,cACLtB,GAAI4C,EAAK5C,GACTsD,QAASvB,IAAaa,EAAK5C,GAC3BoB,SAAUA,IAAMY,EAAYY,EAAK5C,QAd/B4C,EAAK5C,WAqBlCvC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAcgF,MAAO,CAACgB,WAAY,IAAKjF,IAAK+D,EAAUjE,UACjEX,EAAAA,EAAAA,KAAA,UAAQF,UAAU,YAAWa,SAAC,gBAE7B,EClDjB,EAjB2BoF,KAInBrF,EAAAA,EAAAA,MAAC2B,EAAAA,EAAM,CAACvC,UAAU,+CAA8Ca,SAAA,EAC5DX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,iBACJD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,iCAAgCa,SAAA,EAC3CX,EAAAA,EAAAA,KAAA,YAAUF,UAAU,eAAekG,aAN9B,8VAOLtF,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,0BAAyBa,SAAA,EACpCX,EAAAA,EAAAA,KAAA,UAAQF,UAAU,MAAKa,SAAC,YACxBX,EAAAA,EAAAA,KAAA,UAAQF,UAAU,oBAAmBa,SAAC,oBCZ1D,EAAuB,qBAAvB,EAAwD,0B,yBCUxD,MA+CA,EA/CsBsF,KAClB,MAAOC,EAAWC,IAAgB5F,EAAAA,EAAAA,WAAS,IACpC6F,EAAsBC,IAA2B9F,EAAAA,EAAAA,WAAS,GAEjE,OACIG,EAAAA,EAAAA,MAAC2B,EAAAA,EAAM,CAACvC,UAAU,2CAA0Ca,SAAA,EACxDX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,oBACJD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,OAAKZ,UAAS,GAAAK,OAAK6D,EAAW,4BAA2BrD,SAAA,EACrDD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,yBAAwBa,SAAA,EACnCD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,yDAAwDa,SAAA,EACnEX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,+BACJX,EAAAA,EAAAA,KAACsG,EAAAA,EAAM,CAAC/D,GAAG,aACHsD,QAASK,EACTvC,SAAUA,IAAMwC,GAAcD,SAE1ClG,EAAAA,EAAAA,KAAA,KAAGF,UAAWkE,EAAiBrD,SAAC,mEAIpCD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,yBAAwBa,SAAA,EACnCD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,yDAAwDa,SAAA,EACnEX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,gCACJX,EAAAA,EAAAA,KAACsG,EAAAA,EAAM,CAAC/D,GAAG,wBACHsD,QAASO,EACTzC,SAAUA,IAAM0C,GAAyBD,SAErDpG,EAAAA,EAAAA,KAAA,KAAGF,UAAWkE,EAAiBrD,SAAC,+DAKxCD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,0BAAyBa,SAAA,EACpCD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,yBAAwBa,SAAA,EACnCX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,qBACJX,EAAAA,EAAAA,KAAA,KAAAW,SAAG,yCAEPD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,0BAAyBa,SAAA,EACpCX,EAAAA,EAAAA,KAACuG,EAAAA,EAAa,CAACtE,YAAY,sBAC3BjC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,MAAKa,SAAC,8BAI/B,ECzCX6F,EAAU,CACZC,QAAQzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAa,IACtB5E,MAAM9B,EAAAA,EAAAA,KAAC2G,EAAAA,EAAW,IAClBC,aAAa5G,EAAAA,EAAAA,KAAC+F,EAAkB,IAChCc,UAAU7G,EAAAA,EAAAA,KAAC8G,EAAAA,EAAe,IAC1BC,UAAU/G,EAAAA,EAAAA,KAACqE,EAAa,IACxB2C,SAAShH,EAAAA,EAAAA,KAACiG,EAAa,IACvBgB,wBAAwBjH,EAAAA,EAAAA,KAACoC,EAAqB,IAC9C8E,wBAAwBlH,EAAAA,EAAAA,KAAC0C,EAAqB,IAC9CyE,UAAUnH,EAAAA,EAAAA,KAACoH,EAAAA,EAAc,KAY7B,EATiBC,KAET3G,EAAAA,EAAAA,MAAA4G,EAAAA,SAAA,CAAA3G,SAAA,EACIX,EAAAA,EAAAA,KAACuH,EAAAA,EAAU,CAACC,MAAM,cAClBxH,EAAAA,EAAAA,KAACyH,EAAAA,EAAO,CAAClF,GAAG,WAAWiE,QAASA,M,0ECvB5C,MAAMkB,EAAiBC,EAAAA,GAAOC,IAAGC,WAAA,CAAAC,YAAA,eAAVH,CAAU,ydA4BXjI,IAAA,IAAC,MAAC8C,GAAM9C,EAAA,OAAK8C,EAAK,SAAArC,OAAYqC,EAAK,KAAM,kBAAkB,IA8BjF,EAhBsBuF,IAAgD,IAA/C,GAACxF,EAAE,SAAEoB,EAAQ,SAAEvD,EAAQ,MAAEoC,KAAUzC,GAAMgI,EAC5D,OACIrH,EAAAA,EAAAA,MAACgH,EAAc,CAAC5H,UAAU,mDAAmD0C,MAAOA,EAAM7B,SAAA,EACtFX,EAAAA,EAAAA,KAAA,SAAOY,KAAK,WAAW2B,GAAIA,EAAIoB,SAAUA,EAAU9C,IAAKT,KAAcL,KACtEC,EAAAA,EAAAA,KAAA,SAAOyC,QAASF,MACH,C,2GChDzB,MAAMyF,GAASC,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0IAWlBC,GAAmBT,EAAAA,EAAAA,IAAOU,EAAAA,IAAOR,WAAA,CAAAC,YAAA,gBAAdH,CAAc,ytBAgCpBK,EAGEA,GAmErB,GAlCoBL,EAAAA,EAAAA,IAAOS,GAAiBP,WAAA,CAAAC,YAAA,gBAAxBH,CAAwB,wVAyB5B7D,IAAM,QAAS,CACvBwE,MAAO,0BACPC,KAAM,6B,qCCpGd,MAAMC,EAAe9I,IAA8D,IAA7D,QAAC+I,EAAO,MAAEhI,EAAK,SAAEkD,EAAQ,QAAE+E,EAAU,WAAY3I,GAAML,EACzE,MAAOiJ,IAAYpI,EAAAA,EAAAA,WACf,IAAM,UAAY6C,KAAKwF,SAASpF,QAAQ,GAAGqF,MAAM,KAmB/CC,EAAc,CAChBC,gBAAiB,SACjBxG,GAAIxC,EAAMwC,IAAMoG,EAChBK,cAAc,EACdP,UACAhI,QACAkD,WACA1B,YAAalC,EAAMkC,YACnBgH,iBAAiB,EACjBC,mBAAmB,EACnBrI,IAAKd,EAAMK,SACX4F,aAAcjG,EAAMiG,aACpBmD,YAAaA,KACT,MAAMC,EAASC,SAASC,cAAc,IAADnJ,OAAKJ,EAAMwC,IAAMoG,EAAQ,mBACxDY,EAAoB,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQI,cACtBC,EAAqB,OAANL,QAAM,IAANA,OAAM,EAANA,EAAQM,WAAU,GAElCD,IAELA,EAAaE,UAAUC,IAAI,SAC3BH,EAAaI,iBAAiB,gBAAgB,KAC/B,OAAXN,QAAW,IAAXA,GAAAA,EAAaO,YAAYL,EAAa,IAG/B,OAAXF,QAAW,IAAXA,GAAAA,EAAaQ,YAAYN,GAAa,EAE1CO,WAAY,CACRC,QA1CQlC,IAA2B,IAA1B,SAACpH,KAAaZ,GAAMgI,EACjC,OACIrH,EAAAA,EAAAA,MAACsJ,EAAAA,EAAWC,QAAO,CAACnK,UAAuB,UAAZ4I,EAAsB,cAAgB,MAAQ3I,EAAKY,SAAA,CAC7EA,EAEe,YAAZ+H,GACI1I,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAEbE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAEJ,IAoC7B,OAAOE,EAAAA,EAAAA,KAACkK,EAAW,IAAKpB,GAAe,EAS3C,GAAeqB,EAAAA,EAAAA,MAAK3B,E,yGC9DpB,MAAM4B,GAAezC,EAAAA,EAAAA,IAAO0C,EAAAA,IAAOxC,WAAA,CAAAC,YAAA,gBAAdH,CAAc,4qBA8CX7D,IAAM,QAAS,CACnCwE,MAAO,eACPC,KAAM,mBAiCV,EA3B0B7I,IAAqF,IAApF,IAACmD,EAAG,IAAEC,EAAG,MAAErC,EAAK,SAAEkD,EAAQ,kBAAEC,EAAiB,UAAEX,EAAS,UAAED,EAAS,KAAED,EAAO,GAAErD,EACrG,OACIM,EAAAA,EAAAA,KAACoK,EAAY,CACTE,aAAcA,IAAMtH,EACpBvC,MAAOA,EACPoC,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACNY,SAAUA,EACVC,kBAAmBA,EACnB2G,iBAAkBtH,EAClBuH,iBAAkBvH,GACpB,C,4HCjEV,MAAMwH,EAAkB9C,EAAAA,GAAO+C,OAAM7C,WAAA,CAAAC,YAAA,eAAbH,CAAa,kjBAGrB7D,IAAM,QAAS,CAC3BwE,MAAO,cACPC,KAAM,kBAIQzE,IAAM,QAAS,CAC3BwE,MAAO,2BACPC,KAAM,6BAEMzE,IAAM,QAAS,CAC3BwE,MAAO,sCACPC,KAAM,UAsFZ,EA9BkB7I,IAA6D,IAA5D,MAAC8H,EAAK,OAAEmD,EAAM,QAAE7J,EAAO,KAAEF,EAAO,QAAO,MAAE4B,EAAK,MAAE/B,GAAMf,EACrE,MAAM,UAACkL,IAAa7G,EAAAA,EAAAA,KAGpB,OACIrD,EAAAA,EAAAA,MAAC+J,EAAe,CACZ3K,UAAWkC,IAAW,oBAAqB,CAAC,OAAU2I,EAAQ,UAJnD,CAAC,OAAQ,UAIgEE,SAASrI,KAC7F,eAAuB,UAAT5B,EACdH,MAAOA,EACPK,QAASA,EAAQH,SAAA,CAEJ,UAATC,IACIZ,EAAAA,EAAAA,KAAA,QAAMF,UAAS,SAAAK,OAAWyK,GAAa9F,MAAO,CAACgG,gBAAgB,SAAD3K,OAAWqC,EAAK,SAGtFxC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOa,SAClB6G,MAES,C,qJCpF1B,MAqCA,EArCwBV,KACtB,MAAOiE,EAAWC,IAAgBzK,EAAAA,EAAAA,UAAS,YACrC,MAAE0K,IAAUC,EAAAA,EAAAA,KAElB,OACElL,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACvC,UAAU,sCAAqCa,UACrDX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,2CA2BG,C,0ICtCb,MAsFA,EAtFuByG,KACrB,MAAOnG,EAAMkK,IAAW5K,EAAAA,EAAAA,WAAS,IAC3B,aAAEa,EAAY,MAAEgK,EAAK,MAAE7J,EAAK,QAAE8J,IAAY7J,EAAAA,EAAAA,IAAQ,CACtD8J,cAAe,CACbC,YAAa,GACbC,YAAa,GACbC,gBAAiB,MAarB,OACEzL,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACvC,UAAU,mEAAkEa,UAClFX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBa,UACrCX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,+CA4DC,C,gDC5Fb,QAAuB,qBAAvB,EAAwD,0BAAxD,EAA4F,wBAA5F,EAA4H,sBAA5H,EAAwJ,oBAAxJ,EAAqL,uB,2DCKrL,MAoCA,EApCsB+K,KAClB,MAAOC,EAAMC,IAAWrL,EAAAA,EAAAA,UAAS,OAC1BsL,EAASC,IAAcvL,EAAAA,EAAAA,WAAS,GA+BvC,MAAO,CAACoL,OAAMC,UAASG,WA5BHhL,IAEhB,MAAM4K,EAAO5K,EAAEiL,OAAOC,MAAM,GAE5B,IAAKN,EAAM,OAEX,GAAkB,eAAdA,EAAK/K,MAAuC,cAAd+K,EAAK/K,MAAsC,eAAd+K,EAAK/K,KAEhE,YADAiB,EAAAA,GAAMqK,MAAM,4BAKhB,MAAMC,EAAS,IAAIC,WAEnBD,EAAOE,cAAcV,GAErBQ,EAAOG,QAAU,KACbzK,EAAAA,GAAMqK,MAAM,0CAA0C,EAG1DC,EAAOI,YAAc,IAAMT,GAAW,GAEtCK,EAAOK,UAAY,KACfZ,EAAQO,EAAOM,QACfX,GAAW,EAAM,CACpB,EAG8BD,UAAQ,E,0GCtB/C,MA2CA,EA3CsBnF,KAClB,MAAM,SAACgG,EAAQ,KAAEzL,EAAI,YAAE0L,EAAW,YAAElL,IAAemL,EAAAA,EAAAA,MAC7C,KAACjB,EAAI,QAAEC,EAAO,WAAEG,GAAcL,IAC9BmB,GAAWC,EAAAA,EAAAA,QAAO,MAIlBC,EAAiB,CACnB,CACIC,MAAO,SACPC,KAAM,SACNnM,QANaoM,KAAA,IAAAC,EAAA,OAAsB,QAAtBA,EAAMN,EAASO,eAAO,IAAAD,OAAA,EAAhBA,EAAkBE,OAAO,GAQhD,CACIL,MAAO,SACPC,KAAM,QACNnM,QAASA,IAAM8K,EAAQ3J,KAI/B,OACIvB,EAAAA,EAAAA,MAAC2B,EAAAA,EAAM,CAACvC,UAAS,GAAAK,OAAK6D,EAAW,qBAAoBrD,SAAA,EACjDX,EAAAA,EAAAA,KAAA,MAAIF,UAAWkE,EAAarD,SAAC,gBAC7BD,EAAAA,EAAAA,MAAA,OAAKZ,UAAS,GAAAK,OAAK6D,EAAgB,8BAA6BrD,SAAA,EAC5DD,EAAAA,EAAAA,MAAA,OAAKZ,UAAWkE,EAAerD,SAAA,EAC3BX,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAO+C,SAAUoI,EAAYlL,IAAKgM,EAAUS,QAAM,KAC9DtN,EAAAA,EAAAA,KAAA,OAAAW,UACIX,EAAAA,EAAAA,KAACuN,EAAAA,EAAS,CAACzN,UAAWkE,EAAYrE,IAAKgM,GAAc6B,EAAM5N,IAAI,oBAEnEI,EAAAA,EAAAA,KAAA,UAAQF,UAAWkE,EAAelD,QAAS6L,EAAa,aAAW,YAAWhM,UAC1EX,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mBAEjBE,EAAAA,EAAAA,KAACyN,EAAAA,EAAO,CAACxM,KAAMA,EAAMC,QAASO,EAAaiL,SAAUA,EAAUgB,QAASX,QAE5ErM,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,yBAAwBa,SAAA,EACnCX,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gBAAea,SAAC,kBAC9BX,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAea,SAAC,4BAGnC,C,gDCvDjB,QAAuB,qBAAvB,EAAoD,sB,0BCKpD,MA6BA,EA7BoBgG,KAShBjG,EAAAA,EAAAA,MAAC2B,EAAAA,EAAM,CAACvC,UAAU,2CAA0Ca,SAAA,EAC1DX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,kBACJX,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yDAAwDa,SAV7D,CACX,CAAE,gBAAiB,gBACnB,CAAEgN,OAAQ,kBACV,CAAE,SAAU,wBAQFzI,KAAI,CAACC,EAAMC,KAEb1E,EAAAA,EAAAA,MAAA,MAAIZ,UAAWkE,EAAYrD,SAAA,EACzBD,EAAAA,EAAAA,MAAA,QAAMZ,UAAU,uBAAsBa,SAAA,CACnCiN,OAAOC,KAAK1I,GAAM,GAAG,QAExBnF,EAAAA,EAAAA,KAAA,QAAMF,UAAS,GAAAK,OAAK6D,EAAY,kBAAiBrD,SAC9CiN,OAAOE,OAAO3I,GAAM,OALQC,S,wBCpB7C,MAAM2I,EACJC,WAAAA,GACEC,KAAKrM,KAAOsM,EAAQ,OACpBD,KAAKE,SAAW,CAAC,EACjBF,KAAKG,SAAW,CAAC,EAEjBH,KAAKrM,KAAKyM,SAAQC,IAChBL,KAAKE,SAASG,EAAQtB,MAAMuB,eAAiBD,EAAQ7N,MACrDwN,KAAKG,SAASE,EAAQ7N,MAAM8N,eAAiBD,EAAQtB,KAAK,GAE9D,CAEAwB,QAAAA,CAASxB,GACP,OAAOiB,KAAKE,SAASnB,EAAMuB,cAC7B,CAEAE,QAAAA,CAAShO,GACP,OAAOwN,KAAKG,SAAS3N,EAAM8N,cAC7B,CAEAG,SAAAA,GACE,OAAOT,KAAKrM,KAAKsD,KAAIoJ,GAAWA,EAAQtB,OAC1C,CAEA2B,SAAAA,GACE,OAAOV,KAAKrM,KAAKsD,KAAIoJ,GAAWA,EAAQ7N,OAC1C,CAEAmO,YAAAA,GACE,OAAOX,KAAKE,QACd,CAEAU,YAAAA,GACE,OAAOZ,KAAKG,QACd,CAEAU,OAAAA,GACE,OAAOb,KAAKrM,IACd,CAEAmN,QAAAA,CAAStO,EAAOuM,GAQd,OAPAiB,KAAKrM,KAAKyM,SAAQC,IACZA,EAAQ7N,QAAUA,IACpB6N,EAAQtB,MAAQA,EAChBiB,KAAKG,SAASE,EAAQ7N,MAAM8N,eAAiBD,EAAQtB,MACvD,IAGKiB,IACT,CAEAe,QAAAA,CAAShC,GAQP,OAPAiB,KAAKrM,KAAKqN,QAAQ,CAChBxO,MAAO,GACPuM,MAAOA,IAETiB,KAAKG,SAAS,IAAMpB,EACpBiB,KAAKE,SAASnB,GAAS,GAEhBiB,IACT,CAEAiB,MAAAA,GAOE,OANAjB,KAAKkB,WAAajB,EAAQ,OAC1BD,KAAKkB,WAAWd,SAAQC,IACtBL,KAAKE,SAASG,EAAQtB,MAAMuB,eAAiBD,EAAQ7N,MACrDwN,KAAKG,SAASE,EAAQ7N,MAAM8N,eAAiBD,EAAQtB,KAAK,IAGrDiB,IACT,EAOFmB,EAAOC,QAJaC,KAClB,KAAMrB,gBAAgBF,GAAc,OAAO,IAAIA,CAAa,C","sources":["components/LazyImage.jsx","components/PasswordInput.jsx","components/ResetPasswordPopup.jsx","widgets/NotificationsSettings.jsx","widgets/NotificationsSchedule.jsx","webpack://liga-soccer/./src/widgets/PaymentMethod/styles.module.scss?2adb","webpack://liga-soccer/./src/ui/Radio/styles.module.scss?6796","ui/Radio/index.jsx","assets/mastercard.svg","assets/visa.svg","widgets/PaymentMethod/index.jsx","widgets/ProfileDescription.jsx","webpack://liga-soccer/./src/widgets/PrivacyPolicy/styles.module.scss?3293","widgets/PrivacyPolicy/index.jsx","pages/Settings.jsx","ui/BasicCheckbox.jsx","ui/CustomSelect/styles.js","ui/CustomSelect/index.jsx","ui/DoubleRangeSlider.jsx","ui/TabButton.jsx","widgets/AccountSettings/index.jsx","widgets/ChangePassword.jsx","webpack://liga-soccer/./src/widgets/ProfileAvatar/styles.module.scss?cab7","hooks/useFileReader.js","widgets/ProfileAvatar/index.jsx","webpack://liga-soccer/./src/widgets/ProfileInfo/styles.module.scss?a852","widgets/ProfileInfo/index.jsx","../node_modules/react-select-country-list/country-list.js"],"sourcesContent":["// components\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\n\n// styles\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst LazyImage = ({src, alt, effect = 'blur', className, ...props}) => {\n    return (\n        <LazyLoadImage\n            src={src}\n            alt={alt}\n            effect={effect}\n            wrapperClassName={`lazy-image ${className || ''}`}\n            {...props}\n        />\n    );\n}\n\nLazyImage.propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    effect: PropTypes.oneOf(['blur', 'opacity']),\n    className: PropTypes.string\n}\n\nexport default LazyImage","// hooks\nimport {useState, useEffect} from 'react';\n\nconst PasswordInput = ({innerRef, ...props}) => {\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n\n    const togglePasswordVisibility = e => {\n        e.preventDefault();\n        setIsPasswordVisible(!isPasswordVisible);\n    }\n\n    useEffect(() => {\n        props.value === '' && setIsPasswordVisible(false);\n    }, [props.value]);\n\n    return (\n        <div className=\"field-wrapper\">\n            <input className=\"field\"\n                   type={isPasswordVisible ? 'text' : 'password'}\n                   ref={innerRef}\n                   {...props}/>\n            <button className=\"field-btn\" onClick={togglePasswordVisibility} aria-label=\"Toggle password visibility\">\n                <i className={`icon icon-eye${isPasswordVisible ? '-slash' : '' }`}/>\n            </button>\n        </div>\n    )\n}\n\nexport default PasswordInput","// components\nimport Popup from \"@components/Popup\";\nimport { toast } from \"react-toastify\";\n\n// hooks\nimport { useForm } from \"react-hook-form\";\n\n// utils\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst ResetPasswordPopup = ({ open, onClose }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const handleClose = () => {\n    reset();\n    onClose();\n  };\n\n  const onSubmit = (data) => {\n    toast.info(`New password was sent to ${data.email}`);\n    handleClose();\n  };\n\n  return (\n    <Popup open={open} onClose={handleClose}>\n      <div className=\"d-flex flex-column g-20\">\n        <div className=\"d-flex flex-column g-10\">\n          <h2>Reset Password</h2>\n          <p>\n            Enter your email address below and we'll send you a link to reset\n            your password.\n          </p>\n        </div>\n        <div className=\"d-flex flex-column g-16\">\n          <form className=\"d-flex g-10\" onSubmit={handleSubmit(onSubmit)}>\n            <input\n              className={classNames(\"field\", { \"field--error\": errors.email })}\n              type=\"text\"\n              placeholder=\"example@domain.com\"\n              {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\n            />\n            <button className=\"btn\">Send</button>\n          </form>\n          <p className=\"text-12\">\n            If you don't receive an email within a few minutes, please check\n            your spam folder.\n          </p>\n        </div>\n      </div>\n    </Popup>\n  );\n};\n\nResetPasswordPopup.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ResetPasswordPopup;\n","// components\nimport Spring from '@components/Spring';\nimport BasicCheckbox from '@ui/BasicCheckbox';\n\nconst NotificationsSettings = () => {\n    return (\n        <Spring className=\"card card-padded d-flex flex-column g-20\">\n            <h3>Notifications Settings</h3>\n            <div className=\"d-flex flex-column g-14\">\n                <div className=\"d-flex align-items-center g-12\">\n                    <BasicCheckbox id=\"setting-1\" color=\"grass\" />\n                    <label htmlFor=\"setting-1\">Email Notifications</label>\n                </div>\n                <div className=\"d-flex align-items-center g-12\">\n                    <BasicCheckbox id=\"setting-2\" color=\"grass\" />\n                    <label htmlFor=\"setting-2\">Push Notifications</label>\n                </div>\n                <div className=\"d-flex align-items-center g-12\">\n                    <BasicCheckbox id=\"setting-3\" color=\"grass\" />\n                    <label htmlFor=\"setting-3\">New comment replies</label>\n                </div>\n                <div className=\"d-flex align-items-center g-12\">\n                    <BasicCheckbox id=\"setting-4\" color=\"grass\" />\n                    <label htmlFor=\"setting-4\">New messages</label>\n                </div>\n            </div>\n        </Spring>\n    )\n}\n\nexport default NotificationsSettings","// components\nimport Spring from '@components/Spring';\nimport DoubleRangeSlider from '@ui/DoubleRangeSlider';\n\n// hooks\nimport {useState} from 'react';\n\nconst NotificationsSchedule = () => {\n    const [value, setValue] = useState([8, 18]);\n\n    const formatValue = (val) => {\n        const rounded = Math.round(val * 2) / 2;\n        const hours = Math.floor(rounded);\n        const minutes = (rounded - hours) * 60;\n        const minutesString = minutes.toFixed().padStart(2, '0');\n        return hours + ':' + minutesString;\n    }\n\n    return (\n        <Spring className=\"card card-padded h-1 d-flex flex-column justify-content-between g-16\">\n            <div>\n                <h3>Notifications Schedule</h3>\n                <p className=\"text-12\">Choose how often you want to receive alerts</p>\n            </div>\n            <div className=\"d-flex flex-column g-16\">\n                <DoubleRangeSlider value={value}\n                                   min={0}\n                                   max={24}\n                                   step={0.5}\n                                   ariaLabel=\"Notifications Schedule\"\n                                   valueText={(val) => formatValue(val)}\n                                   onChange={(e, val) => setValue(val)}\n                                   valueLabelDisplay=\"on\"/>\n                <button className=\"btn\">Apply</button>\n            </div>\n        </Spring>\n    )\n}\n\nexport default NotificationsSchedule","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"styles_list__bD8Jf\",\"item\":\"styles_item__VxJvD\",\"selected\":\"styles_selected__yf86n\",\"light\":\"styles_light__jFdWW\",\"dark\":\"styles_dark__PsOHk\",\"item_media\":\"styles_item_media__7BCxu\",\"item_num\":\"styles_item_num__zetpa\"};","// extracted by mini-css-extract-plugin\nexport default {\"radio\":\"styles_radio__pAj-k\",\"light\":\"styles_light__HM6EG\",\"dark\":\"styles_dark__yMwVt\"};","// styling\nimport styles from './styles.module.scss';\n\n// hooks\nimport {useThemeProvider} from '@contexts/themeContext';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Radio = ({className, name, id, ...props}) => {\n    const {theme} = useThemeProvider();\n\n    return (\n        <div className={`${styles.radio} ${styles[theme]} ${className ? className : ''}`}>\n            <input type=\"radio\" id={id} name={name} {...props} />\n            <label htmlFor={id}/>\n        </div>\n    )\n}\n\nRadio.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n}\n\nexport default Radio","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMastercard(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"2.11676in\",\n    height: \"1.5in\",\n    viewBox: \"0 0 152.407 108\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 152.407,\n    height: 108,\n    style: {\n      fill: \"none\"\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 60.4117,\n    y: 25.6968,\n    width: 31.5,\n    height: 56.6064,\n    style: {\n      fill: \"#ff5f00\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M382.20839,306a35.9375,35.9375,0,0,1,13.7499-28.3032,36,36,0,1,0,0,56.6064A35.938,35.938,0,0,1,382.20839,306Z\",\n    transform: \"translate(-319.79649 -252)\",\n    style: {\n      fill: \"#eb001b\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M454.20349,306a35.99867,35.99867,0,0,1-58.2452,28.3032,36.00518,36.00518,0,0,0,0-56.6064A35.99867,35.99867,0,0,1,454.20349,306Z\",\n    transform: \"translate(-319.79649 -252)\",\n    style: {\n      fill: \"#f79e1b\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M450.76889,328.3077v-1.1589h.4673v-.2361h-1.1901v.2361h.4675v1.1589Zm2.3105,0v-1.3973h-.3648l-.41959.9611-.41971-.9611h-.365v1.3973h.2576v-1.054l.3935.9087h.2671l.39351-.911v1.0563Z\",\n    transform: \"translate(-319.79649 -252)\",\n    style: {\n      fill: \"#f79e1b\"\n    }\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMastercard);\nexport default __webpack_public_path__ + \"static/media/mastercard.b720e3b5a9bf9bce7ef42d6682f56356.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgVisa(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#1A2ADF\"\n    },\n    d: \"M194.403,176.227l-67.021,159.926H83.638L50.68,208.536c-2.029-7.87-3.763-10.734-9.847-14.076  C30.867,189.072,14.474,184.018,0,180.87l1.013-4.642h70.379c8.976,0,17.046,5.987,19.075,16.308l17.427,92.562l43.044-108.87  H194.403z M365.749,283.915c0.194-42.186-58.373-44.482-57.952-63.355c0.114-5.761,5.574-11.857,17.532-13.396  c5.938-0.79,22.279-1.369,40.8,7.134l7.259-33.898c-9.965-3.617-22.774-7.081-38.694-7.081c-40.889,0-69.674,21.749-69.917,52.868  c-0.268,23.012,20.537,35.854,36.23,43.518c16.114,7.842,21.502,12.849,21.445,19.882c-0.105,10.734-12.857,15.425-24.751,15.636  c-20.805,0.324-32.872-5.622-42.509-10.11l-7.49,35.063c9.653,4.432,27.525,8.28,46.021,8.507  C337.182,338.681,365.612,317.164,365.749,283.915 M473.728,336.154H512l-33.395-159.926h-35.331  c-7.939,0-14.632,4.63-17.614,11.723l-62.042,148.203h43.425l8.62-23.884h53.082L473.728,336.154z M427.564,279.491l21.786-60.05  l12.533,60.05H427.564z M253.525,176.227l-34.23,159.926h-41.379l34.238-159.926H253.525z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisa);\nexport default __webpack_public_path__ + \"static/media/visa.61d22daef0dfb0bad80331b805683cad.svg\";\nexport { ForwardRef as ReactComponent };","// styling\nimport styles from './styles.module.scss';\n\n// components\nimport Spring from '@components/Spring';\nimport ScrollContainer from '@components/ScrollContainer';\nimport Radio from '@ui/Radio';\n\n// hooks\nimport useMeasure from 'react-use-measure';\nimport {useState} from 'react';\nimport {useThemeProvider} from '@contexts/themeContext';\n\n// utils\nimport {modifyCardNumber} from '@utils/helpers';\nimport dayjs from 'dayjs';\n\n// assets\nimport mc from '@assets/mastercard.svg';\nimport visa from '@assets/visa.svg';\n\nconst data = [\n    {id: 'card-1', type: 'visa', number: '44410000515122', lastUsed: new Date()},\n    {id: 'card-2', type: 'mastercard', number: '7850145269870021', lastUsed: new Date(2022, 5, 12)},\n    {id: 'card-3', type: 'visa', number: '4058215874952361', lastUsed: new Date(2022, 4, 8)},\n    {id: 'card-4', type: 'visa', number: '5285606522147812', lastUsed: new Date(2019, 2, 25)},\n    {id: 'card-5', type: 'mastercard', number: '5100236512987432', lastUsed: new Date(2012, 11, 3)}\n]\n\nconst PaymentMethod = () => {\n    const {theme} = useThemeProvider();\n    const [selected, setSelected] = useState(data[0].id);\n    const [headerRef, {height: headerHeight}] = useMeasure();\n    const [footerRef, {height: footerHeight}] = useMeasure();\n\n    return (\n        <Spring className=\"card h-2 d-flex flex-column\">\n            <h3 className=\"card_header\" style={{paddingBottom: 20}} ref={headerRef}>\n                Payment Method\n            </h3>\n            <ScrollContainer height={headerHeight + footerHeight}>\n                <div className={`${styles.list} track`}>\n                    {\n                        data.map((item, index) => (\n                            <Spring className={`${styles.item} ${styles[theme]} ${selected === item.id ? styles.selected : ''}`}\n                                    type=\"slideUp\"\n                                    key={item.id}\n                                    index={index}>\n                                <div className={styles.item_media}>\n                                    <img src={item.type === 'visa' ? visa : mc} alt={item.type}/>\n                                </div>\n                                <div className=\"flex-1\">\n                                    <span className={styles.item_num}>{modifyCardNumber(item.number)}</span>\n                                    <p className=\"label h6\">\n                                        Last used: {dayjs(item.lastUsed).format('DD MMM YYYY')}\n                                    </p>\n                                </div>\n                                <Radio name=\"credit-card\"\n                                       id={item.id}\n                                       checked={selected === item.id}\n                                       onChange={() => setSelected(item.id)}\n                                />\n                            </Spring>\n                        ))\n                    }\n                </div>\n            </ScrollContainer>\n            <div className=\"card_footer\" style={{paddingTop: 20}} ref={footerRef}>\n                <button className=\"btn w-100\">Add new</button>\n            </div>\n        </Spring>\n    )\n}\n\nexport default PaymentMethod","// components\nimport Spring from '@components/Spring';\n\nconst ProfileDescription = () => {\n    const placeholder = `Hi I'm Lottie Poole. Molestie ac feugiat sed lectus vestibulum mattis ullamcorper velit sed. Vitae ultricies leo integer malesuada nunc vel risus. Amet risus nullam eget felis eget. Pulvinar etiam non quam lacus suspendisse faucibus interdum posuere. Sit amet nulla facilisi morbi tempus iaculis. Pellentesque diam volutpat commodo sed egestas.`;\n\n    return (\n        <Spring className=\"card card-padded h-2 d-flex flex-column g-20\">\n            <h3>Description</h3>\n            <div className=\"d-flex flex-column flex-1 g-30\">\n                <textarea className=\"field flex-1\" defaultValue={placeholder}/>\n                <div className=\"d-flex flex-column g-16\">\n                    <button className=\"btn\">Update</button>\n                    <button className=\"btn btn--outlined\">Cancel</button>\n                </div>\n            </div>\n        </Spring>\n    )\n}\n\nexport default ProfileDescription","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"styles_main__pHVN-\",\"main_text\":\"styles_main_text__PyC-W\"};","// styling\nimport styles from './styles.module.scss';\n\n// components\nimport Spring from '@components/Spring';\nimport Switch from '@ui/Switch';\nimport PasswordInput from '@components/PasswordInput';\n\n// hooks\nimport {useState} from 'react';\n\nconst PrivacyPolicy = () => {\n    const [twoFactor, setTwoFactor] = useState(false)\n    const [desktopNotifications, setDesktopNotifications] = useState(false)\n\n    return (\n        <Spring className=\"card card-padded d-flex flex-column g-20\">\n            <h3>Privacy Policy</h3>\n            <div>\n                <div className={`${styles.main} d-flex flex-column g-20`}>\n                    <div className=\"d-flex flex-column g-6\">\n                        <div className=\"d-flex align-items-center justify-content-between g-20\">\n                            <h4>Two-factor Authentication</h4>\n                            <Switch id=\"two-factor\"\n                                    checked={twoFactor}\n                                    onChange={() => setTwoFactor(!twoFactor)}/>\n                        </div>\n                        <p className={styles.main_text}>\n                            Two-factor authentication is an enhanced security measure.\n                        </p>\n                    </div>\n                    <div className=\"d-flex flex-column g-6\">\n                        <div className=\"d-flex align-items-center justify-content-between g-20\">\n                            <h4>Show desktop notifications</h4>\n                            <Switch id=\"desktop-notifications\"\n                                    checked={desktopNotifications}\n                                    onChange={() => setDesktopNotifications(!desktopNotifications)}/>\n                        </div>\n                        <p className={styles.main_text}>\n                            Choose the option you want as your default setting.\n                        </p>\n                    </div>\n                </div>\n                <div className=\"d-flex flex-column g-16\">\n                    <div className=\"d-flex flex-column g-6\">\n                        <h4>Delete Account:</h4>\n                        <p>Permanently delete your account.</p>\n                    </div>\n                    <div className=\"d-flex flex-column g-16\">\n                        <PasswordInput placeholder=\"Account password\"/>\n                        <button className=\"btn\">Delete Account</button>\n                    </div>\n                </div>\n            </div>\n        </Spring>\n    )\n}\n\nexport default PrivacyPolicy","// components\nimport PageHeader from '@layout/PageHeader';\nimport AppGrid from '@layout/AppGrid';\nimport ProfileAvatar from '@widgets/ProfileAvatar';\nimport ProfileInfo from '@widgets/ProfileInfo';\nimport AccountSettings from '@widgets/AccountSettings';\nimport ChangePassword from '@widgets/ChangePassword';\nimport NotificationsSettings from '@widgets/NotificationsSettings';\nimport NotificationsSchedule from '@widgets/NotificationsSchedule';\nimport PaymentMethod from '@widgets/PaymentMethod';\nimport ProfileDescription from '@widgets/ProfileDescription';\nimport PrivacyPolicy from '@widgets/PrivacyPolicy';\n\nconst widgets = {\n    avatar: <ProfileAvatar/>,\n    info: <ProfileInfo/>,\n    description: <ProfileDescription/>,\n    settings: <AccountSettings/>,\n    payments: <PaymentMethod/>,\n    privacy: <PrivacyPolicy/>,\n    notifications_settings: <NotificationsSettings/>,\n    notifications_schedule: <NotificationsSchedule/>,\n    password: <ChangePassword/>\n}\n\nconst Settings = () => {\n    return (\n        <>\n            <PageHeader title=\"Settings\" />\n            <AppGrid id=\"settings\" widgets={widgets}/>\n        </>\n    )\n}\n\nexport default Settings","// styling\nimport styled from 'styled-components/macro';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst StyledCheckbox = styled.div`\n  position: relative;\n  width: 18px;\n  height: 18px;\n  border: 1px solid var(--border);\n  border-radius: 4px;\n  background: var(--widget);\n  flex-shrink: 0;\n\n  input {\n    display: none;\n\n    & + label {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: block;\n      cursor: pointer;\n\n      &:after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 10px;\n        height: 10px;\n        background: ${({color}) => color ? `var(--${color})` : 'var(--highlight)'};\n        border-radius: 2px;\n        transform: translate(-50%, -50%);\n        transition: opacity var(--transition);\n        opacity: 0;\n      }\n    }\n\n    &:checked + label:after {\n      opacity: 1;\n    }\n  }\n`;\n\nconst BasicCheckbox = ({id, onChange, innerRef, color, ...props}) => {\n    return (\n        <StyledCheckbox className=\"d-flex align-items-center justify-content-center\" color={color}>\n            <input type=\"checkbox\" id={id} onChange={onChange} ref={innerRef} {...props}/>\n            <label htmlFor={id}/>\n        </StyledCheckbox>\n    )\n}\n\nBasicCheckbox.propTypes = {\n    id: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    innerRef: PropTypes.func,\n    color: PropTypes.string\n}\n\nexport default BasicCheckbox","import styled from 'styled-components/macro';\nimport {keyframes} from 'styled-components';\nimport theme from 'styled-theming';\nimport Select from 'react-select';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst NormalizedSelect = styled(Select)`\n  .select {\n    &__control {\n      cursor: pointer;\n      transition: var(--transition);\n      border: none;\n      min-height: unset;\n      border-radius: 4px;\n      box-shadow: none;\n\n      &--is-focused, &:hover {\n        outline: none;\n      }\n\n      &--is-focused .icon {\n        transform: rotate(180deg);\n      }\n\n      .icon {\n        transition: .3s ease-in-out;\n      }\n    }\n\n    &__single-value {\n      overflow: visible;\n    }\n\n    &__menu {\n      min-width: max-content;\n      width: 100%;\n      border-radius: 12px;\n      z-index: 100;\n      animation: ${fadeIn} var(--transition);\n\n      &.close {\n        animation: ${fadeIn} var(--transition) reverse;\n      }\n\n      &-list {\n        max-height: 160px;\n        overflow-y: auto;\n        scroll-behavior: smooth;\n        z-index: 100;\n      }\n    }\n\n    &__option {\n      cursor: pointer;\n      transition: var(--transition);\n\n      &:hover,\n      &--is-focused,\n      &--is-selected {\n        background: transparent;\n        color: var(--header);\n      }\n    }\n\n    &__indicator, &__indicator-separator {\n      display: none;\n    }\n\n    &__value-container {\n      padding: 0;\n    }\n  }\n`;\n\nconst BasicSelect = styled(NormalizedSelect)`\n  .select {\n    &__control {\n      background-color: transparent;\n      border: 1px solid var(--border);\n      padding: 0 12px;\n      height: 40px;\n\n      &--is-focused, &:hover {\n        border-color: var(--highlight);\n      }\n    }\n\n    &__placeholder {\n      color: var(--placeholder);\n    }\n\n    &__single-value {\n      color: var(--text);\n      line-height: 1;\n    }\n\n    &__menu {\n      box-shadow: var(--widget-shadow);\n      background: var(--widget);\n      border: ${theme('theme', {\n        light: '1px solid var(--widget)',\n        dark: '1px solid var(--border)',\n      })};\n      width: 100%;\n    }\n  }\n`;\n\nexport default BasicSelect","// styled components\nimport BasicSelect from './styles';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport PropTypes from 'prop-types';\nimport {components} from 'react-select';\nimport {memo} from 'react';\n\nconst CustomSelect = ({options, value, onChange, variant = 'basic', ...props}) => {\n    const [uniqueId] = useState(\n        () => 'select_' + Math.random().toFixed(5).slice(2),\n    );\n\n    // custom dropdown indicator\n    const Control = ({children, ...props}) => {\n        return (\n            <components.Control className={variant === 'basic' ? 'field-input' : ''} {...props}>\n                {children}\n                {\n                    variant === 'minimal' ?\n                        <i className=\"icon icon-caret-down\"/>\n                        :\n                        <i className=\"icon icon-chevron-down\"/>\n                }\n            </components.Control>\n        );\n    }\n\n    // select props\n    const selectProps = {\n        classNamePrefix: 'select',\n        id: props.id || uniqueId,\n        isSearchable: true,\n        options,\n        value,\n        onChange,\n        placeholder: props.placeholder,\n        openMenuOnFocus: true,\n        blurInputOnSelect: true,\n        ref: props.innerRef,\n        defaultValue: props.defaultValue,\n        onMenuClose: () => {\n            const menuEl = document.querySelector(`#${props.id || uniqueId } .select__menu`);\n            const containerEl = menuEl?.parentElement;\n            const clonedMenuEl = menuEl?.cloneNode(true);\n\n            if (!clonedMenuEl) return;\n\n            clonedMenuEl.classList.add('close');\n            clonedMenuEl.addEventListener('animationend', () => {\n                containerEl?.removeChild(clonedMenuEl);\n            });\n\n            containerEl?.appendChild(clonedMenuEl);\n        },\n        components: {\n            Control,\n        },\n    };\n\n    return <BasicSelect {...selectProps} />\n}\n\nCustomSelect.propTypes = {\n    options: PropTypes.array.isRequired,\n    value: PropTypes.object,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default memo(CustomSelect);","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\n\n// components\nimport Slider from '@mui/material/Slider';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst StyledSlider = styled(Slider)`\n  padding: 8px 0 !important;\n  \n  .MuiSlider-rail,\n  .MuiSlider-track {\n    height: 8px;\n    border-radius: 4px;\n    border: none !important;\n  }\n\n  .MuiSlider-rail {\n    background-color: var(--border);\n  }\n\n  .MuiSlider-thumb {\n    width: 20px;\n    height: 20px;\n\n    &:before, &:after {\n      display: none;\n    }\n  }\n\n  .MuiSlider-valueLabel {\n    background: var(--tooltip-bg);\n    box-shadow: 0 2px 16px rgba(75, 85, 110, 0.2);\n    border-radius: 8px;\n    font-family: var(--heading-font);\n    color: var(--header);\n    font-weight: 500;\n    height: 30px;\n    min-width: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: fit-content;\n    padding: 0 8px !important;\n    \n    .MuiSlider-valueLabelLabel {\n      font-size: 0.75rem;\n      line-height: 1;\n    }\n  }\n\n  .MuiSlider-track,\n  .MuiSlider-thumb {\n    background-color: ${theme('theme', {\n    light: 'var(--grass)',\n    dark: 'var(--accent)'\n})};\n    box-shadow: none !important;\n  }\n`;\n\nconst DoubleRangeSlider = ({min, max, value, onChange, valueLabelDisplay, valueText, ariaLabel, step = 1}) => {\n    return (\n        <StyledSlider\n            getAriaLabel={() => ariaLabel}\n            value={value}\n            min={min}\n            max={max}\n            step={step}\n            onChange={onChange}\n            valueLabelDisplay={valueLabelDisplay}\n            getAriaValueText={valueText}\n            valueLabelFormat={valueText}\n        />\n    )\n}\n\nDoubleRangeSlider.propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    value: PropTypes.arrayOf(PropTypes.number).isRequired,\n    onChange: PropTypes.func.isRequired,\n    valueLabelDisplay: PropTypes.string.isRequired,\n    valueText: PropTypes.func.isRequired,\n    ariaLabel: PropTypes.string.isRequired,\n    step: PropTypes.number\n}\n\nexport default DoubleRangeSlider","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\n\n// hooks\nimport {useThemeProvider} from '@contexts/themeContext';\n\n// utils\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst StyledTabButton = styled.button`\n  border-radius: 0;\n  position: relative;\n  background: ${theme('theme', {\n    light: 'var(--body)',\n    dark: 'var(--border)'\n  })};\n\n  &.active, &[aria-selected='true'], &:hover, &:focus {\n    background: ${theme('theme', {\n      light: 'var(--widget) !important',\n      dark: 'var(--accent) !important'\n    })};\n    box-shadow: ${theme('theme', {\n      light: '0 1px 8px rgba(110, 110, 110, 0.1);',\n      dark: 'none'\n    })};\n  }\n\n  .title {\n    position: relative;\n    z-index: 2;\n  }\n\n  .color {\n    position: absolute;\n    z-index: 1;\n    height: 100%;\n    width: 4px;\n    top: 0;\n    transition: width var(--transition);\n  }\n\n  &:first-of-type .color {\n    &.ltr {\n      left: 0;\n    }\n\n    &.rtl {\n      right: 0;\n    }\n  }\n\n  &:last-of-type .color {\n    transform: scaleX(-1);\n\n    &.ltr {\n      right: 0;\n    }\n\n    &.rtl {\n      left: 0;\n    }\n  }\n\n  &[data-colored='true'] {\n    &.active, &[aria-selected='true'], &:hover, &:focus {\n      background: var(--widget) !important;\n      box-shadow: none;\n\n      .color {\n        width: 100%;\n      }\n\n      &.dark-bg {\n        color: #fff;\n      }\n    }\n  }\n`;\n\nconst TabButton = ({title, active, onClick, type = 'basic', color, value}) => {\n    const {direction} = useThemeProvider();\n    const darkColors = ['blue', 'purple'];\n\n    return (\n        <StyledTabButton\n            className={classNames('btn text-overflow', {'active': active, 'dark-bg': darkColors.includes(color)})}\n            data-colored={type === 'color'}\n            value={value}\n            onClick={onClick}>\n            {\n                type === 'color' && (\n                    <span className={`color ${direction}`} style={{backgroundColor: `var(--${color})`}}/>\n                )\n            }\n            <span className=\"title\">\n                {title}\n            </span>\n        </StyledTabButton>\n    )\n}\n\nTabButton.propTypes = {\n    title: PropTypes.string.isRequired,\n    active: PropTypes.bool,\n    onClick: PropTypes.func,\n    type: PropTypes.oneOf(['basic', 'color']),\n    color: PropTypes.string\n}\n\nexport default TabButton","// styling\nimport styles from \"./styles.module.scss\";\n\n// components\nimport Spring from \"@components/Spring\";\nimport { TabsList } from \"@mui/base/TabsList\";\nimport { TabPanel } from \"@mui/base/TabPanel\";\nimport { Tabs } from \"@mui/base/Tabs\";\nimport TabButton from \"@ui/TabButton\";\nimport Profile from \"@widgets/AccountSettings/Profile\";\nimport Fade from \"@mui/material/Fade\";\n\n// hooks\nimport { useState } from \"react\";\nimport { useWindowSize } from \"react-use\";\n\nconst AccountSettings = () => {\n  const [activeTab, setActiveTab] = useState(\"profile\");\n  const { width } = useWindowSize();\n\n  return (\n    <Spring className=\"card d-flex flex-column card-padded\">\n      <h3>Paramètre du compte (En cours ...)</h3>\n      {/* <div className=\"d-flex flex-column justify-content-between flex-1\">\n                <Tabs value={activeTab}>\n                    <TabsList className={`${styles.tabs_list} tab-nav col-2`}>\n                        <TabButton title={width >= 375 ? 'Edit Profile' : 'Profile'}\n                                   onClick={() => setActiveTab('profile')}\n                                   active={activeTab === 'profile'}/>\n                        <TabButton title={width >= 375 ? 'Basic settings' : 'Basic'}\n                                   onClick={() => setActiveTab('basic')}\n                                   active={activeTab === 'basic'}/>\n                    </TabsList>\n                    <TabPanel value=\"profile\">\n                        <Fade in={activeTab === 'profile'} timeout={400}>\n                            <div>\n                                <Profile/>\n                            </div>\n                        </Fade>\n                    </TabPanel>\n                    <TabPanel value=\"basic\">\n                        <Fade in={activeTab === 'basic'} timeout={400}>\n                            <div>\n                                <Profile/>\n                            </div>\n                        </Fade>\n                    </TabPanel>\n                </Tabs>\n            </div> */}\n    </Spring>\n  );\n};\n\nexport default AccountSettings;\n","// components\nimport Spring from \"@components/Spring\";\nimport PasswordInput from \"@components/PasswordInput\";\nimport ResetPasswordPopup from \"@components/ResetPasswordPopup\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\n\n// hooks\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\n\nconst ChangePassword = () => {\n  const [open, setOpen] = useState(false);\n  const { handleSubmit, watch, reset, control } = useForm({\n    defaultValues: {\n      passwordOld: \"\",\n      passwordNew: \"\",\n      passwordConfirm: \"\",\n    },\n  });\n\n  const onSubmit = (data) => {\n    toast.success(\"Password changed successfully\");\n  };\n\n  const handleResetPassword = (e) => {\n    e.preventDefault();\n    setOpen(true);\n  };\n\n  return (\n    <Spring className=\"card d-flex flex-column justify-content-between g-24 card-padded\">\n      <div className=\"d-flex flex-column g-8\">\n        <h3>Modifie ton mot de passe (En Cours ...)</h3>\n        {/* <p className=\"text-overflow\">Change or reset your account password</p> */}\n      </div>\n      {/* <form className=\"d-flex flex-column g-40\">\n                <div className=\"d-flex flex-column g-20\">\n                    <Controller control={control}\n                                name=\"passwordOld\"\n                                rules={{required: true}}\n                                render={({field: {ref, onChange, value}, fieldState: {error}}) => (\n                                    <PasswordInput\n                                        className={classNames('field', {'field--error': error})}\n                                        value={value}\n                                        onChange={e => onChange(e.target.value)}\n                                        placeholder=\"Old password\"\n                                        innerRef={ref}/>\n                                )}\n                    />\n                    <Controller control={control}\n                                name=\"passwordNew\"\n                                rules={{required: true}}\n                                render={({field: {ref, onChange, value}, fieldState: {error}}) => (\n                                    <PasswordInput\n                                        className={classNames('field', {'field--error': error})}\n                                        value={value}\n                                        onChange={e => onChange(e.target.value)}\n                                        placeholder=\"New password\"\n                                        innerRef={ref}/>\n                                )}\n                    />\n                    <Controller control={control}\n                                name=\"passwordConfirm\"\n                                rules={{\n                                    required: true,\n                                    validate: value => value === watch('passwordNew')\n                                }}\n                                render={({field: {ref, onChange, value}, fieldState: {error}}) => (\n                                    <PasswordInput\n                                        className={classNames('field', {'field--error': error})}\n                                        value={value}\n                                        onChange={e => onChange(e.target.value)}\n                                        placeholder=\"Confirm new password\"\n                                        innerRef={ref}/>\n                                )}\n                    />\n                    <button className=\"text-button text-button--sm\"\n                            onClick={handleResetPassword}\n                            style={{alignSelf: 'flex-start'}}>\n                        Reset password?\n                    </button>\n                </div>\n                <div className=\"d-flex flex-column g-16\">\n                    <button className=\"btn\" type=\"submit\" onClick={handleSubmit(onSubmit)}>\n                        Change password\n                    </button>\n                    <button className=\"btn btn--outlined\" type=\"reset\" onClick={reset}>\n                        Cancel\n                    </button>\n                </div>\n            </form>\n            <ResetPasswordPopup open={open} onClose={() => setOpen(false)}/> */}\n    </Spring>\n  );\n};\n\nexport default ChangePassword;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"styles_card__ksFSK\",\"container\":\"styles_container__zTtVO\",\"wrapper\":\"styles_wrapper__D6uzf\",\"title\":\"styles_title__R-MpS\",\"img\":\"styles_img__ZdJok\",\"button\":\"styles_button__cypnL\"};","// components\nimport {toast} from 'react-toastify';\n\n// hooks\nimport {useState} from 'react';\n\nconst useFileReader = () => {\n    const [file, setFile] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    // define a function that handles the file upload event\n    const handleFile = (e) => {\n        // get the file object from the event\n        const file = e.target.files[0];\n        // check if a file was selected; if not, exit the function\n        if (!file) return;\n        // check if the file type is supported (JPEG, PNG, or WEBP); if not, show an error message and exit the function\n        if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/webp') {\n            toast.error('File type not supported.');\n            return;\n        }\n\n        // create a new FileReader object\n        const reader = new FileReader();\n        // read the file as a data URL\n        reader.readAsDataURL(file);\n        // set up an error handler for the reader\n        reader.onerror = () => {\n            toast.error('Something went wrong. Please try again.');\n        }\n        // set up a loading indicator while the file is being loaded\n        reader.onloadstart = () => setLoading(true);\n        // when the file is finished loading, set the file state and turn off the loading indicator\n        reader.onloadend = () => {\n            setFile(reader.result);\n            setLoading(false);\n        };\n    }\n\n    return {file, setFile, handleFile, loading};\n}\n\nexport default useFileReader","// styling\nimport styles from './styles.module.scss';\n\n// components\nimport Spring from '@components/Spring';\nimport LazyImage from '@components/LazyImage';\nimport Submenu from '@ui/Submenu';\n\n// hooks\nimport {useRef} from 'react';\nimport useFileReader from '@hooks/useFileReader';\nimport useSubmenu from '@hooks/useSubmenu';\n\n// assets\nimport user from '@assets/user.webp';\nimport placeholder from '@assets/placeholder.webp';\n\nconst ProfileAvatar = () => {\n    const {anchorEl, open, handleClick, handleClose} = useSubmenu();\n    const {file, setFile, handleFile} = useFileReader();\n    const inputRef = useRef(null);\n\n    const triggerInput = () => inputRef.current?.click();\n\n    const submenuActions = [\n        {\n            label: 'Upload',\n            icon: 'upload',\n            onClick: triggerInput,\n        },\n        {\n            label: 'Remove',\n            icon: 'trash',\n            onClick: () => setFile(placeholder)\n        }\n    ]\n\n    return (\n        <Spring className={`${styles.card} card card-padded`}>\n            <h3 className={styles.title}>My Profile</h3>\n            <div className={`${styles.container} d-flex align-items-center`}>\n                <div className={styles.wrapper}>\n                    <input type=\"file\" onChange={handleFile} ref={inputRef} hidden/>\n                    <div>\n                        <LazyImage className={styles.img} src={file ? file : user} alt=\"Lottie Poole\"/>\n                    </div>\n                    <button className={styles.button} onClick={handleClick} aria-label=\"Open menu\">\n                        <i className=\"icon-camera\"/>\n                    </button>\n                    <Submenu open={open} onClose={handleClose} anchorEl={anchorEl} actions={submenuActions}/>\n                </div>\n                <div className=\"d-flex flex-column g-4\">\n                    <h3 className=\"text-overflow\">Lottie Poole</h3>\n                    <span className=\"text-overflow\">Munich, Germany</span>\n                </div>\n            </div>\n        </Spring>\n)\n}\n\nexport default ProfileAvatar","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"styles_item__+tzWb\",\"value\":\"styles_value__2WKdy\"};","// styling\nimport styles from \"./styles.module.scss\";\n\n// components\nimport Spring from \"@components/Spring\";\n\nconst ProfileInfo = () => {\n  const data = [\n    { \"Nom & Prenoms\": \"Lottie Poole\" },\n    { Numero: \"+123 45 567 88\" },\n    { \"E-mail\": \"soccer@template.com\" },\n    /* {'Location': 'Munich, Germany'} */\n  ];\n\n  return (\n    <Spring className=\"card d-flex flex-column g-16 card-padded\">\n      <h3>Profile info</h3>\n      <ul className=\"d-flex flex-column justify-content-between flex-1 g-14\">\n        {data.map((item, index) => {\n          return (\n            <li className={styles.item} key={index}>\n              <span className=\"text-600 text-header\">\n                {Object.keys(item)[0]}:\n              </span>\n              <span className={`${styles.value} text-overflow`}>\n                {Object.values(item)[0]}\n              </span>\n            </li>\n          );\n        })}\n      </ul>\n    </Spring>\n  );\n};\n\nexport default ProfileInfo;\n","class CountryList {\n  constructor() {\n    this.data = require('./data.json')\n    this.labelMap = {}\n    this.valueMap = {}\n\n    this.data.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value\n      this.valueMap[country.value.toLowerCase()] = country.label\n    })\n  }\n\n  getValue(label) {\n    return this.labelMap[label.toLowerCase()]\n  }\n\n  getLabel(value) {\n    return this.valueMap[value.toLowerCase()]\n  }\n\n  getLabels() {\n    return this.data.map(country => country.label)\n  }\n\n  getValues() {\n    return this.data.map(country => country.value)\n  }\n\n  getLabelList() {\n    return this.labelMap\n  }\n\n  getValueList() {\n    return this.valueMap\n  }\n\n  getData() {\n    return this.data\n  }\n\n  setLabel(value, label) {\n    this.data.forEach(country => {\n      if (country.value === value) {\n        country.label = label\n        this.valueMap[country.value.toLowerCase()] = country.label\n      }\n    })\n\n    return this\n  }\n\n  setEmpty(label) {\n    this.data.unshift({\n      value: '',\n      label: label,\n    })\n    this.valueMap[''] = label\n    this.labelMap[label] = ''\n\n    return this\n  }\n\n  native() {\n    this.nativeData = require('./data-native.json')\n    this.nativeData.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value\n      this.valueMap[country.value.toLowerCase()] = country.label\n    })\n\n    return this\n  }\n}\n\nconst countryList = () => {\n  if (!(this instanceof CountryList)) return new CountryList()\n}\n\nmodule.exports = countryList\n"],"names":["_ref","src","alt","effect","className","props","_jsx","LazyLoadImage","wrapperClassName","concat","innerRef","isPasswordVisible","setIsPasswordVisible","useState","useEffect","value","_jsxs","children","type","ref","onClick","e","preventDefault","open","onClose","register","handleSubmit","formState","errors","reset","useForm","handleClose","Popup","onSubmit","data","toast","info","email","classNames","placeholder","required","pattern","NotificationsSettings","Spring","BasicCheckbox","id","color","htmlFor","NotificationsSchedule","setValue","DoubleRangeSlider","min","max","step","ariaLabel","valueText","val","rounded","Math","round","hours","floor","toFixed","padStart","formatValue","onChange","valueLabelDisplay","name","theme","useThemeProvider","styles","radio","number","lastUsed","Date","PaymentMethod","selected","setSelected","headerRef","height","headerHeight","useMeasure","footerRef","footerHeight","style","paddingBottom","ScrollContainer","list","map","item","index","item_media","visa","mc","item_num","modifyCardNumber","dayjs","format","Radio","checked","paddingTop","ProfileDescription","defaultValue","PrivacyPolicy","twoFactor","setTwoFactor","desktopNotifications","setDesktopNotifications","Switch","PasswordInput","widgets","avatar","ProfileAvatar","ProfileInfo","description","settings","AccountSettings","payments","privacy","notifications_settings","notifications_schedule","password","ChangePassword","Settings","_Fragment","PageHeader","title","AppGrid","StyledCheckbox","styled","div","withConfig","componentId","_ref2","fadeIn","keyframes","_templateObject","_taggedTemplateLiteral","NormalizedSelect","Select","light","dark","CustomSelect","options","variant","uniqueId","random","slice","selectProps","classNamePrefix","isSearchable","openMenuOnFocus","blurInputOnSelect","onMenuClose","menuEl","document","querySelector","containerEl","parentElement","clonedMenuEl","cloneNode","classList","add","addEventListener","removeChild","appendChild","components","Control","BasicSelect","memo","StyledSlider","Slider","getAriaLabel","getAriaValueText","valueLabelFormat","StyledTabButton","button","active","direction","includes","backgroundColor","activeTab","setActiveTab","width","useWindowSize","setOpen","watch","control","defaultValues","passwordOld","passwordNew","passwordConfirm","useFileReader","file","setFile","loading","setLoading","handleFile","target","files","error","reader","FileReader","readAsDataURL","onerror","onloadstart","onloadend","result","anchorEl","handleClick","useSubmenu","inputRef","useRef","submenuActions","label","icon","triggerInput","_inputRef$current","current","click","hidden","LazyImage","user","Submenu","actions","Numero","Object","keys","values","CountryList","constructor","this","require","labelMap","valueMap","forEach","country","toLowerCase","getValue","getLabel","getLabels","getValues","getLabelList","getValueList","getData","setLabel","setEmpty","unshift","native","nativeData","module","exports","countryList"],"sourceRoot":""}