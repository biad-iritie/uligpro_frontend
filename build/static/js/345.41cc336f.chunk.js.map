{"version":3,"file":"static/js/345.41cc336f.chunk.js","mappings":"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","sources":["components/TruncatedText.jsx","hooks/useSubmenu.js","webpack://uligpro/./src/layout/PageHeader/styles.module.scss?bf05","layout/PageHeader/User.jsx","layout/PageHeader/index.jsx","ui/Submenu.jsx","../node_modules/@apollo/src/react/hooks/useMutation.ts"],"sourcesContent":["// components\nimport Truncate from 'react-truncate';\n\n// hooks\nimport {useState, useEffect} from 'react';\nimport {useThemeProvider} from '@contexts/themeContext';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst TruncatedText = ({text, lines = 2, width, className}) => {\n    const {fontScale} = useThemeProvider();\n    const [truncated, setTruncated] = useState(false);\n    const [mounted, setMounted] = useState(false);\n\n    useEffect(() => {\n        setMounted(true);\n\n        return () => setMounted(false);\n    }, []);\n\n    useEffect(() => {\n        setTruncated(true);\n    }, [fontScale, width]);\n\n    return (\n        <span className={className ? className : ''}>\n            {\n                mounted && (\n                    <Truncate lines={lines}\n                              ellipsis={(<span>...</span>)}\n                              width={width}\n                              onTruncate={() => setTruncated(!truncated)}>\n                        {text}\n                    </Truncate>\n                )\n            }\n        </span>\n    )\n}\n\nTruncatedText.propTypes = {\n    text: PropTypes.string.isRequired,\n    lines: PropTypes.number,\n    width: PropTypes.number.isRequired,\n    className: PropTypes.string,\n}\n\nexport default TruncatedText","import {useState} from 'react';\n\nconst useSubmenu = () => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return {anchorEl, open, handleClick, handleClose};\n}\n\nexport default useSubmenu","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"styles_search__GmdGZ\",\"light\":\"styles_light__lc2os\",\"dark\":\"styles_dark__QARKU\",\"control\":\"styles_control__yt4v8\",\"ltr\":\"styles_ltr__wJBAc\",\"control_indicator\":\"styles_control_indicator__5KQZA\",\"rtl\":\"styles_rtl__WDQ+h\",\"avatar\":\"styles_avatar__Njv4v\",\"avatar_cart\":\"styles_avatar_cart__lkrPs\",\"navbar\":\"styles_navbar__7XmC-\",\"title\":\"styles_title__r0jL9\",\"tablet\":\"styles_tablet__lLnKM\",\"desktop\":\"styles_desktop__0SxXb\"};","// styling\nimport styles from \"./styles.module.scss\";\n\n// components\nimport Submenu from \"@ui/Submenu\";\nimport SettingsPopup from \"@layout/BottomNav/SettingsPopup\";\n\n// hooks\nimport useSubmenu from \"@hooks/useSubmenu\";\nimport { useWindowSize } from \"react-use\";\nimport { useState } from \"react\";\nimport useStoreRoute from \"@hooks/useStoreRoute\";\nimport { useShopProvider } from \"@contexts/shopContext\";\n\n// assets\nimport user from \"@assets/user.webp\";\n\nconst User = () => {\n  const [popupOpen, setPopupOpen] = useState(false);\n  const { anchorEl, open, handleClick, handleClose } = useSubmenu();\n  const isTablet = useWindowSize().width < 1280;\n  const isStoreRoute = useStoreRoute();\n  const { setCartOpen } = useShopProvider();\n\n  const settingsPopup = {\n    label: \"UI Settings\",\n    icon: \"gear-solid\",\n    onClick: () => setPopupOpen(true),\n  };\n\n  const submenuActions = [\n    {\n      label: \"Profile\",\n      icon: \"user\",\n    },\n    {\n      label: \"Logout\",\n      icon: \"exit\",\n    },\n  ];\n\n  return (\n    <div className=\"d-flex align-items-center g-16\">\n      <div className={styles.avatar}>\n        <img\n          className=\"c-pointer\"\n          src={user}\n          alt=\"user\"\n          onClick={handleClick}\n        />\n        {isStoreRoute && isTablet && (\n          <button\n            className={styles.avatar_cart}\n            aria-label=\"Shopping cart\"\n            onClick={() => setCartOpen(true)}\n          >\n            <i className=\"icon-bag-solid\" />\n          </button>\n        )}\n      </div>\n      <div className=\"d-flex flex-column\">\n        <span className=\"h3\" style={{ letterSpacing: 0.2 }}>\n          Lottie Poole\n        </span>\n        <span className=\"text-12\">Munich, Germany</span>\n      </div>\n      <Submenu\n        open={open}\n        onClose={handleClose}\n        anchorEl={anchorEl}\n        actions={isTablet ? [settingsPopup, ...submenuActions] : submenuActions}\n      />\n      <SettingsPopup open={popupOpen} onClose={() => setPopupOpen(false)} />\n    </div>\n  );\n};\n\nexport default User;\n","// styling\nimport styles from \"./styles.module.scss\";\n\n// components\nimport { Helmet } from \"react-helmet\";\nimport SidebarTrigger from \"@ui/SidebarTrigger\";\nimport User from \"./User\";\nimport TruncatedText from \"@components/TruncatedText\";\nimport { NavLink } from \"react-router-dom\";\n\n// hooks\nimport { useWindowSize } from \"react-use\";\nimport { useThemeProvider } from \"@contexts/themeContext\";\nimport { useShopProvider } from \"@contexts/shopContext\";\nimport useMeasure from \"react-use-measure\";\nimport useStoreRoute from \"@hooks/useStoreRoute\";\nimport useAuthentication from \"@hooks/useAuthentication\";\n\n// utils\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nconst TabletHeader = ({ title }) => {\n  const [ref, { width }] = useMeasure();\n\n  return (\n    <div\n      className={`${styles.tablet} d-flex align-items-center justify-content-between g-20`}\n    >\n      <div className=\"d-flex align-items-center flex-1 g-30\">\n        <SidebarTrigger />\n        <div className=\"flex-1\" ref={ref}>\n          <TruncatedText\n            className={`${styles.title} h2`}\n            text={title}\n            width={width}\n            lines={1}\n          />\n        </div>\n      </div>\n      <div className=\"d-flex align-items-center g-20\">\n        {/* <Search /> */}\n        <User />\n      </div>\n    </div>\n  );\n};\n\nconst DesktopHeader = ({ title }) => {\n  const { width } = useWindowSize();\n  const {\n    theme,\n    toggleTheme,\n    fontScale,\n    changeFontScale,\n    direction,\n    toggleDirection,\n  } = useThemeProvider();\n  const { setCartOpen } = useShopProvider();\n  const [ref, { width: titleWidth }] = useMeasure();\n  const isStoreRoute = useStoreRoute();\n  const [isLogged, setIsLogged] = useState(false);\n  const user = useSelector((state) => state.auth.user);\n\n  useEffect(() => {\n    if (user.name !== undefined) {\n      setIsLogged(true);\n    } else {\n      setIsLogged(false);\n    }\n  }, [user]);\n  return (\n    <div\n      className={`${styles.desktop} d-flex justify-content-between align-items-center g-20`}\n    >\n      <div className=\"d-flex align-items-center flex-1 g-30\">\n        {width < 1920 && <SidebarTrigger />}\n        <div className=\"flex-1\" ref={ref}>\n          <TruncatedText\n            className={`${styles.title} h2`}\n            text={title}\n            width={titleWidth}\n            lines={1}\n          />\n        </div>\n      </div>\n      <div className=\"d-flex align-items-center\">\n        {!isLogged && (\n          <NavLink className=\"text-button\" to={\"/login\"}>\n            <button className=\"btn btn--sm\" style={{ margin: \"0 50px\" }}>\n              Connexion\n            </button>\n          </NavLink>\n        )}\n\n        {/* <Search/>\n                <div className=\"d-flex g-30\" style={{margin: '0 50px'}}>\n                    <button className={`${styles.control} h5`} onClick={toggleTheme}>\n                        <i className={`icon-${theme === 'light' ? 'moon' : 'sun'}`}/>\n                        Theme\n                    </button>\n                    <button className={`${styles.control} h5`} onClick={toggleDirection}>\n                        <i className=\"icon icon-book-regular\"/>\n                        {direction === 'ltr' ? 'RTL' : 'LTR'}\n                    </button>\n                    <div className=\"d-flex g-16\">\n                        <span className={`${styles.control} h5`}>\n                            <i className=\"icon-text\"/> Font size\n                        </span>\n                        <RangeSlider value={fontScale}\n                                     onChange={e => changeFontScale(e.target.value)}\n                                     min={1}\n                                     max={1.06}\n                                     step={0.01}/>\n                    </div>\n                    {\n                        isStoreRoute &&\n                        <button className={`${styles.control} ${styles[direction]} h5`}\n                                onClick={() => setCartOpen(true)}>\n                            <i className=\"icon icon-bag-solid\"/>\n                            <span className={styles.control_indicator}/>\n                            Cart (2 items)\n                        </button>\n                    }\n                </div> */}\n        {/* <User /> */}\n      </div>\n    </div>\n  );\n};\n\nconst PageHeader = ({ title }) => {\n  const { width } = useWindowSize();\n\n  return (\n    <>\n      <Helmet>\n        <title>{title} | Ligue professionnelle des universités</title>\n      </Helmet>\n      {width < 1280 ? (\n        width < 768 ? (\n          <h1 className={`${styles.title} h2`}>{title}</h1>\n        ) : (\n          <TabletHeader title={title} />\n        )\n      ) : (\n        <DesktopHeader title={title} />\n      )}\n    </>\n  );\n};\n\nPageHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PageHeader;\n","// styling\nimport styled from \"styled-components/macro\";\n\n// components\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\n// hooks\nimport { useThemeProvider } from \"@contexts/themeContext\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\n// utils\nimport PropTypes from \"prop-types\";\n\nconst StyledMenuItem = styled(MenuItem)`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  font-size: 0.875rem !important;\n  color: var(--text) !important;\n  height: 40px;\n  padding: 0 16px;\n  width: 100%;\n\n  &:hover .icon {\n    color: var(--highlight);\n  }\n\n  .icon {\n    color: var(--header);\n    font-size: 12px;\n    width: 12px;\n    height: 12px;\n    transition: color var(--transition);\n  }\n`;\n\nconst Submenu = ({ open, onClose, anchorEl, actions, MyDocument }) => {\n  const { direction } = useThemeProvider();\n\n  return (\n    <Menu\n      open={open}\n      onClose={onClose}\n      anchorEl={anchorEl}\n      elevation={0}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: direction === \"ltr\" ? \"left\" : \"right\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: direction === \"ltr\" ? \"left\" : \"right\",\n      }}\n      sx={{\n        \"& .MuiPaper-root\": {\n          backgroundColor: \"var(--tooltip-bg)\",\n          borderRadius: \"4px\",\n          boxShadow: \"var(--widget-shadow)\",\n          marginTop: \"6px\",\n        },\n        \"& .MuiMenu-list\": {\n          padding: 0,\n        },\n        \"& .MuiButtonBase-root\": {\n          padding: \"0 16px\",\n          width: \"100%\",\n          \"&:not(:last-child)\": {\n            borderBottom: \"1px solid var(--divider)\",\n          },\n          \"&:hover\": {\n            backgroundColor: \"transparent\",\n          },\n        },\n      }}\n    >\n      {actions.map((action, index) => (\n        <StyledMenuItem\n          key={index}\n          onClick={() => {\n            action.onClick && action.onClick();\n            onClose();\n          }}\n        >\n          <i className={`icon icon-${action.icon}`} />\n          <PDFDownloadLink document={MyDocument} fileName=\"somename.pdf\">\n            {({ blob, url, loading, error }) =>\n              loading ? \"Loading document...\" : action.label\n            }\n          </PDFDownloadLink>\n        </StyledMenuItem>\n      ))}\n    </Menu>\n  );\n};\n\nSubmenu.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  anchorEl: PropTypes.any,\n  actions: PropTypes.array.isRequired,\n};\n\nexport default Submenu;\n","import * as React from \"rehackt\";\nimport type { DocumentNode } from \"graphql\";\nimport type { TypedDocumentNode } from \"@graphql-typed-document-node/core\";\nimport type {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n  NoInfer,\n} from \"../types/types.js\";\n\nimport type {\n  ApolloCache,\n  DefaultContext,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core/index.js\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\n\n/**\n *\n *\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\n *\n * @example\n * ```jsx\n * import { gql, useMutation } from '@apollo/client';\n *\n * const ADD_TODO = gql`\n *   mutation AddTodo($type: String!) {\n *     addTodo(type: $type) {\n *       id\n *       type\n *     }\n *   }\n * `;\n *\n * function AddTodo() {\n *   let input;\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\n *\n *   return (\n *     <div>\n *       <form\n *         onSubmit={e => {\n *           e.preventDefault();\n *           addTodo({ variables: { type: input.value } });\n *           input.value = '';\n *         }}\n *       >\n *         <input\n *           ref={node => {\n *             input = node;\n *           }}\n *         />\n *         <button type=\"submit\">Add Todo</button>\n *       </form>\n *     </div>\n *   );\n * }\n * ```\n * @since 3.0.0\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\n * @param options - Options to control how the mutation is executed.\n * @returns A tuple in the form of `[mutate, result]`\n */\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<\n    NoInfer<TData>,\n    NoInfer<TVariables>,\n    TContext,\n    TCache\n  >\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = React.useState<Omit<MutationResult, \"reset\">>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = React.useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = React.useCallback(\n    (\n      executeOptions: MutationFunctionOptions<\n        TData,\n        TVariables,\n        TContext,\n        TCache\n      > = {}\n    ) => {\n      const { options, mutation } = ref.current;\n      const baseOptions = { ...options, mutation };\n      const client = executeOptions.client || ref.current.client;\n\n      if (\n        !ref.current.result.loading &&\n        !baseOptions.ignoreResults &&\n        ref.current.isMounted\n      ) {\n        setResult(\n          (ref.current.result = {\n            loading: true,\n            error: void 0,\n            data: void 0,\n            called: true,\n            client,\n          })\n        );\n      }\n\n      const mutationId = ++ref.current.mutationId;\n      const clientOptions = mergeOptions(baseOptions, executeOptions);\n\n      return client\n        .mutate(clientOptions as MutationOptions<TData, OperationVariables>)\n        .then((response) => {\n          const { data, errors } = response;\n          const error =\n            errors && errors.length > 0 ?\n              new ApolloError({ graphQLErrors: errors })\n            : void 0;\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (error && onError) {\n            onError(\n              error,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n          }\n\n          if (\n            mutationId === ref.current.mutationId &&\n            !clientOptions.ignoreResults\n          ) {\n            const result = {\n              called: true,\n              loading: false,\n              data,\n              error,\n              client,\n            };\n\n            if (ref.current.isMounted && !equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onCompleted =\n            executeOptions.onCompleted || ref.current.options?.onCompleted;\n\n          if (!error) {\n            onCompleted?.(\n              response.data!,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n          }\n\n          return response;\n        })\n        .catch((error) => {\n          if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n            const result = {\n              loading: false,\n              error,\n              data: void 0,\n              called: true,\n              client,\n            };\n\n            if (!equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (onError) {\n            onError(\n              error,\n              clientOptions as MutationOptions<TData, OperationVariables>\n            );\n\n            // TODO(brian): why are we returning this here???\n            return { data: void 0, errors: error };\n          }\n\n          throw error;\n        });\n    },\n    []\n  );\n\n  const reset = React.useCallback(() => {\n    if (ref.current.isMounted) {\n      const result = { called: false, loading: false, client };\n      Object.assign(ref.current, { mutationId: 0, result });\n      setResult(result);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n"],"names":["_ref","text","lines","width","className","fontScale","useThemeProvider","truncated","setTruncated","useState","mounted","setMounted","useEffect","_jsx","children","Truncate","ellipsis","onTruncate","useSubmenu","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","User","popupOpen","setPopupOpen","isTablet","useWindowSize","isStoreRoute","useStoreRoute","setCartOpen","useShopProvider","settingsPopup","label","icon","onClick","submenuActions","_jsxs","styles","src","user","alt","style","letterSpacing","Submenu","onClose","actions","SettingsPopup","TabletHeader","title","ref","useMeasure","concat","SidebarTrigger","TruncatedText","DesktopHeader","_ref2","theme","toggleTheme","changeFontScale","direction","toggleDirection","titleWidth","isLogged","setIsLogged","useSelector","state","auth","undefined","name","NavLink","to","margin","_ref3","_Fragment","Helmet","StyledMenuItem","styled","MenuItem","withConfig","componentId","MyDocument","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","sx","backgroundColor","borderRadius","boxShadow","marginTop","padding","borderBottom","map","action","index","PDFDownloadLink","document","fileName","blob","url","loading","error","useMutation","mutation","options","client","useApolloClient","verifyDocumentType","DocumentType","Mutation","_a","React","called","result","setResult","mutationId","isMounted","Object","assign","current","execute","executeOptions","baseOptions","__assign","ignoreResults","data","clientOptions","mergeOptions","mutate","then","response","errors","length","ApolloError","graphQLErrors","onError","result_1","equal","onCompleted","_b","catch","result_2","reset","result_3"],"sourceRoot":""}